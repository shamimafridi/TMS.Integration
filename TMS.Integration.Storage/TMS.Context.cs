//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMS.Integration.Storage
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TMSEntities : DbContext
    {
        public TMSEntities()
            : base("name=TMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<COAControl> COAControls { get; set; }
        public virtual DbSet<COAGeneral> COAGenerals { get; set; }
        public virtual DbSet<COASubsidiary> COASubsidiaries { get; set; }
        public virtual DbSet<COASubSubsidiary> COASubSubsidiaries { get; set; }
        public virtual DbSet<CustomerBillDetail> CustomerBillDetails { get; set; }
        public virtual DbSet<CustomerBill> CustomerBills { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DestinationPoint> DestinationPoints { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<dtproperty> dtproperties { get; set; }
        public virtual DbSet<HistoryTransactionAudit> HistoryTransactionAudits { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Option> Options { get; set; }
        public virtual DbSet<PayableAccount> PayableAccounts { get; set; }
        public virtual DbSet<ProductRate> ProductRates { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductValue> ProductValues { get; set; }
        public virtual DbSet<Receipt> Receipts { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<StationPoint> StationPoints { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<TransactionActivity> TransactionActivities { get; set; }
        public virtual DbSet<TransactionNature> TransactionNatures { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<UserSecurity> UserSecurities { get; set; }
        public virtual DbSet<VehicleAdjustmentDetail> VehicleAdjustmentDetails { get; set; }
        public virtual DbSet<VehicleAdjustment> VehicleAdjustments { get; set; }
        public virtual DbSet<VehicleOwner> VehicleOwners { get; set; }
        public virtual DbSet<Vehicles_> Vehicles_ { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
        public virtual DbSet<FSFControl> FSFControls { get; set; }
        public virtual DbSet<FSFGeneral> FSFGenerals { get; set; }
        public virtual DbSet<FSFSubsidiary> FSFSubsidiaries { get; set; }
        public virtual DbSet<FSFSubSubsidiary> FSFSubSubsidiaries { get; set; }
        public virtual DbSet<GeneratedReference> GeneratedReferences { get; set; }
        public virtual DbSet<GL_DetailPaymentVoucherTAB> GL_DetailPaymentVoucherTAB { get; set; }
        public virtual DbSet<GL_MasterPaymentVoucherTAB> GL_MasterPaymentVoucherTAB { get; set; }
        public virtual DbSet<OpeningBalance> OpeningBalances { get; set; }
        public virtual DbSet<PaymentVoucherDetail> PaymentVoucherDetails { get; set; }
        public virtual DbSet<PaymentVoucher> PaymentVouchers { get; set; }
        public virtual DbSet<ProjectNodesSetup> ProjectNodesSetups { get; set; }
        public virtual DbSet<SetupTable> SetupTables { get; set; }
        public virtual DbSet<TempTransDetailCF> TempTransDetailCFs { get; set; }
        public virtual DbSet<TempTransDetailLedger> TempTransDetailLedgers { get; set; }
        public virtual DbSet<TempTransDetailLedgerTrial> TempTransDetailLedgerTrials { get; set; }
        public virtual DbSet<TempTransDetailTrialFSF> TempTransDetailTrialFSFs { get; set; }
        public virtual DbSet<TempTransDetailVBill> TempTransDetailVBills { get; set; }
        public virtual DbSet<ttt> ttts { get; set; }
        public virtual DbSet<UsedTransactionsDetail> UsedTransactionsDetails { get; set; }
        public virtual DbSet<VoucherDetail> VoucherDetails { get; set; }
        public virtual DbSet<CreditDebitNotEqual> CreditDebitNotEquals { get; set; }
        public virtual DbSet<GL_GetCOACombineLedTBRptVW> GL_GetCOACombineLedTBRptVW { get; set; }
        public virtual DbSet<GL_GetCOACombineTransactionVW> GL_GetCOACombineTransactionVW { get; set; }
        public virtual DbSet<GL_GetCOACombineVW> GL_GetCOACombineVW { get; set; }
        public virtual DbSet<GL_GetFSFCombineLedTBRptVW> GL_GetFSFCombineLedTBRptVW { get; set; }
        public virtual DbSet<GL_GetFSFCombineTransactionVW> GL_GetFSFCombineTransactionVW { get; set; }
        public virtual DbSet<GL_GetFSFCombineVW> GL_GetFSFCombineVW { get; set; }
        public virtual DbSet<QryOtherAmountExcInvoice> QryOtherAmountExcInvoices { get; set; }
        public virtual DbSet<VIEW1> VIEW1 { get; set; }
        public virtual DbSet<VIEW2> VIEW2 { get; set; }
        public virtual DbSet<VIEW3> VIEW3 { get; set; }
    
        [DbFunction("TMSEntities", "GetTransactionNatures")]
        public virtual IQueryable<GetTransactionNatures_Result> GetTransactionNatures(string natureCode, string system)
        {
            var natureCodeParameter = natureCode != null ?
                new ObjectParameter("NatureCode", natureCode) :
                new ObjectParameter("NatureCode", typeof(string));
    
            var systemParameter = system != null ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetTransactionNatures_Result>("[TMSEntities].[GetTransactionNatures](@NatureCode, @System)", natureCodeParameter, systemParameter);
        }
    
        public virtual int BackupDatabase(string fileName, string temp_dump, string database)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var temp_dumpParameter = temp_dump != null ?
                new ObjectParameter("temp_dump", temp_dump) :
                new ObjectParameter("temp_dump", typeof(string));
    
            var databaseParameter = database != null ?
                new ObjectParameter("database", database) :
                new ObjectParameter("database", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BackupDatabase", fileNameParameter, temp_dumpParameter, databaseParameter);
        }
    
        public virtual int DeleteBranches(string branchCode)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBranches", branchCodeParameter);
        }
    
        public virtual int DeleteCities(string cityCode)
        {
            var cityCodeParameter = cityCode != null ?
                new ObjectParameter("CityCode", cityCode) :
                new ObjectParameter("CityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCities", cityCodeParameter);
        }
    
        public virtual int DeleteCOAControls(string controlCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCOAControls", controlCodeParameter);
        }
    
        public virtual int DeleteCOAGenerals(string controlCode, string generalCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCOAGenerals", controlCodeParameter, generalCodeParameter);
        }
    
        public virtual int DeleteCOASubsidiaries(string controlCode, string generalCode, string subsidiaryCode1, string subsidiaryCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCOASubsidiaries", controlCodeParameter, generalCodeParameter, subsidiaryCode1Parameter, subsidiaryCodeParameter);
        }
    
        public virtual int DeleteCOASubSubsidiaries(string controlCode, string generalCode, string subsidiaryCode1, string subSubsidiaryCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCOASubSubsidiaries", controlCodeParameter, generalCodeParameter, subsidiaryCode1Parameter, subSubsidiaryCodeParameter);
        }
    
        public virtual int DeleteCustomerBills(string option, string billNo)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomerBills", optionParameter, billNoParameter);
        }
    
        public virtual int DeleteCustomerBillsDetails(string option, string billNo, string invoiceNo, string branchCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomerBillsDetails", optionParameter, billNoParameter, invoiceNoParameter, branchCodeParameter);
        }
    
        public virtual int DeleteCustomers(string customerCode)
        {
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomers", customerCodeParameter);
        }
    
        public virtual int DeleteDestinationPoints(string destinationPointCode)
        {
            var destinationPointCodeParameter = destinationPointCode != null ?
                new ObjectParameter("DestinationPointCode", destinationPointCode) :
                new ObjectParameter("DestinationPointCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDestinationPoints", destinationPointCodeParameter);
        }
    
        public virtual int DeleteDivisions(string divisionCode)
        {
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDivisions", divisionCodeParameter);
        }
    
        public virtual int DeleteFSFControls(string controlCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFSFControls", controlCodeParameter);
        }
    
        public virtual int DeleteFSFGenerals(string controlCode, string generalCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFSFGenerals", controlCodeParameter, generalCodeParameter);
        }
    
        public virtual int DeleteFSFSubsidiaries(string controlCode, string generalCode, string subsidiaryCode1, string subsidiaryCode, string subSubsidiaryCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFSFSubsidiaries", controlCodeParameter, generalCodeParameter, subsidiaryCode1Parameter, subsidiaryCodeParameter, subSubsidiaryCodeParameter);
        }
    
        public virtual int DeleteFSFSubSubsidiaries(string controlCode, string generalCode, string subsidiaryCode1, string subSubsidiaryCode)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFSFSubSubsidiaries", controlCodeParameter, generalCodeParameter, subsidiaryCode1Parameter, subSubsidiaryCodeParameter);
        }
    
        public virtual int DeleteGeneratedReferences(string genFrom, string formName, string transactionNature, string transactionNo, string branchCode, string documentNature, string documentNo)
        {
            var genFromParameter = genFrom != null ?
                new ObjectParameter("GenFrom", genFrom) :
                new ObjectParameter("GenFrom", typeof(string));
    
            var formNameParameter = formName != null ?
                new ObjectParameter("FormName", formName) :
                new ObjectParameter("FormName", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var documentNatureParameter = documentNature != null ?
                new ObjectParameter("DocumentNature", documentNature) :
                new ObjectParameter("DocumentNature", typeof(string));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGeneratedReferences", genFromParameter, formNameParameter, transactionNatureParameter, transactionNoParameter, branchCodeParameter, documentNatureParameter, documentNoParameter);
        }
    
        public virtual int DeleteHistoryTransactionAudit(string userID, string computerID, Nullable<System.DateTime> processDateTime, string error, Nullable<System.DateTime> documentDate, Nullable<long> stationCode, string documentNature, string documentNo, Nullable<long> partyCode, string pONature, string pONumber, Nullable<long> itemCode, Nullable<decimal> quantity, Nullable<decimal> availableQuantity, Nullable<decimal> balanceQuantity, Nullable<decimal> pOAvailableQuantity, Nullable<decimal> pOBalanceQuantity, Nullable<long> gUID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var computerIDParameter = computerID != null ?
                new ObjectParameter("ComputerID", computerID) :
                new ObjectParameter("ComputerID", typeof(string));
    
            var processDateTimeParameter = processDateTime.HasValue ?
                new ObjectParameter("ProcessDateTime", processDateTime) :
                new ObjectParameter("ProcessDateTime", typeof(System.DateTime));
    
            var errorParameter = error != null ?
                new ObjectParameter("Error", error) :
                new ObjectParameter("Error", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var stationCodeParameter = stationCode.HasValue ?
                new ObjectParameter("StationCode", stationCode) :
                new ObjectParameter("StationCode", typeof(long));
    
            var documentNatureParameter = documentNature != null ?
                new ObjectParameter("DocumentNature", documentNature) :
                new ObjectParameter("DocumentNature", typeof(string));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var partyCodeParameter = partyCode.HasValue ?
                new ObjectParameter("PartyCode", partyCode) :
                new ObjectParameter("PartyCode", typeof(long));
    
            var pONatureParameter = pONature != null ?
                new ObjectParameter("PONature", pONature) :
                new ObjectParameter("PONature", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var availableQuantityParameter = availableQuantity.HasValue ?
                new ObjectParameter("AvailableQuantity", availableQuantity) :
                new ObjectParameter("AvailableQuantity", typeof(decimal));
    
            var balanceQuantityParameter = balanceQuantity.HasValue ?
                new ObjectParameter("BalanceQuantity", balanceQuantity) :
                new ObjectParameter("BalanceQuantity", typeof(decimal));
    
            var pOAvailableQuantityParameter = pOAvailableQuantity.HasValue ?
                new ObjectParameter("POAvailableQuantity", pOAvailableQuantity) :
                new ObjectParameter("POAvailableQuantity", typeof(decimal));
    
            var pOBalanceQuantityParameter = pOBalanceQuantity.HasValue ?
                new ObjectParameter("POBalanceQuantity", pOBalanceQuantity) :
                new ObjectParameter("POBalanceQuantity", typeof(decimal));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHistoryTransactionAudit", userIDParameter, computerIDParameter, processDateTimeParameter, errorParameter, documentDateParameter, stationCodeParameter, documentNatureParameter, documentNoParameter, partyCodeParameter, pONatureParameter, pONumberParameter, itemCodeParameter, quantityParameter, availableQuantityParameter, balanceQuantityParameter, pOAvailableQuantityParameter, pOBalanceQuantityParameter, gUIDParameter);
        }
    
        public virtual int DeleteInvoices(string option, string transactionNo, string branchCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteInvoices", optionParameter, transactionNoParameter, branchCodeParameter);
        }
    
        public virtual int DeleteOrdersDetails(string option, Nullable<int> orderNumber, string orderNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var orderNatureParameter = orderNature != null ?
                new ObjectParameter("OrderNature", orderNature) :
                new ObjectParameter("OrderNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrdersDetails", optionParameter, orderNumberParameter, orderNatureParameter);
        }
    
        public virtual int DeleteProductRates(string productCode, string fromRegionCode, string toRegionCode, Nullable<System.DateTime> effectiveDate)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var fromRegionCodeParameter = fromRegionCode != null ?
                new ObjectParameter("FromRegionCode", fromRegionCode) :
                new ObjectParameter("FromRegionCode", typeof(string));
    
            var toRegionCodeParameter = toRegionCode != null ?
                new ObjectParameter("ToRegionCode", toRegionCode) :
                new ObjectParameter("ToRegionCode", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProductRates", productCodeParameter, fromRegionCodeParameter, toRegionCodeParameter, effectiveDateParameter);
        }
    
        public virtual int DeleteProducts(string productCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProducts", productCodeParameter);
        }
    
        public virtual int DeleteProductValues(string productCode, Nullable<System.DateTime> effectiveDate)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProductValues", productCodeParameter, effectiveDateParameter);
        }
    
        public virtual int DeleteReceipts(string option, string transactionNo, string branchCode, string billNo)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReceipts", optionParameter, transactionNoParameter, branchCodeParameter, billNoParameter);
        }
    
        public virtual int DeleteRegions(string regionCode)
        {
            var regionCodeParameter = regionCode != null ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRegions", regionCodeParameter);
        }
    
        public virtual int DeleteStationPoints(string stationPointCode)
        {
            var stationPointCodeParameter = stationPointCode != null ?
                new ObjectParameter("StationPointCode", stationPointCode) :
                new ObjectParameter("StationPointCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStationPoints", stationPointCodeParameter);
        }
    
        public virtual int DeleteSuppliers(string supplierCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSuppliers", supplierCodeParameter);
        }
    
        public virtual int DeleteSuppliersDetails(string option, string supplierCode, string itemCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSuppliersDetails", optionParameter, supplierCodeParameter, itemCodeParameter);
        }
    
        public virtual int DeleteTransactionsDetails(string option, Nullable<int> transactionNo, string branchCode, string transactionNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var transactionNoParameter = transactionNo.HasValue ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(int));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTransactionsDetails", optionParameter, transactionNoParameter, branchCodeParameter, transactionNatureParameter);
        }
    
        public virtual int DeleteTransactionTypes(string natureCode, string transactionTypeCode)
        {
            var natureCodeParameter = natureCode != null ?
                new ObjectParameter("NatureCode", natureCode) :
                new ObjectParameter("NatureCode", typeof(string));
    
            var transactionTypeCodeParameter = transactionTypeCode != null ?
                new ObjectParameter("TransactionTypeCode", transactionTypeCode) :
                new ObjectParameter("TransactionTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTransactionTypes", natureCodeParameter, transactionTypeCodeParameter);
        }
    
        public virtual int DeleteUserSecurities(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserSecurities", userIDParameter);
        }
    
        public virtual int DeleteVehicleAdjustments(string option, string branchCode, string transactionNo, string transactionNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVehicleAdjustments", optionParameter, branchCodeParameter, transactionNoParameter, transactionNatureParameter);
        }
    
        public virtual int DeleteVehicleAdjustmentsDetails(string option, string transactionNo, string branchCode, string transactionNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVehicleAdjustmentsDetails", optionParameter, transactionNoParameter, branchCodeParameter, transactionNatureParameter);
        }
    
        public virtual int DeleteVehicleOwners(string ownerCode)
        {
            var ownerCodeParameter = ownerCode != null ?
                new ObjectParameter("OwnerCode", ownerCode) :
                new ObjectParameter("OwnerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVehicleOwners", ownerCodeParameter);
        }
    
        public virtual int DeleteVehicles(string vehicleCode)
        {
            var vehicleCodeParameter = vehicleCode != null ?
                new ObjectParameter("VehicleCode", vehicleCode) :
                new ObjectParameter("VehicleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVehicles", vehicleCodeParameter);
        }
    
        public virtual int DeleteVihicles(string vihicleCode)
        {
            var vihicleCodeParameter = vihicleCode != null ?
                new ObjectParameter("VihicleCode", vihicleCode) :
                new ObjectParameter("VihicleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVihicles", vihicleCodeParameter);
        }
    
        public virtual int DeleteVouchers(string option, string branchCode, string transactionNo, string transactionNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVouchers", optionParameter, branchCodeParameter, transactionNoParameter, transactionNatureParameter);
        }
    
        public virtual int DeleteVouchersDetails(string option, string transactionNo, string branchCode, string transactionNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVouchersDetails", optionParameter, transactionNoParameter, branchCodeParameter, transactionNatureParameter);
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int InsertItemCategory(string itemCategoryCode, string itemCategory)
        {
            var itemCategoryCodeParameter = itemCategoryCode != null ?
                new ObjectParameter("ItemCategoryCode", itemCategoryCode) :
                new ObjectParameter("ItemCategoryCode", typeof(string));
    
            var itemCategoryParameter = itemCategory != null ?
                new ObjectParameter("ItemCategory", itemCategory) :
                new ObjectParameter("ItemCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertItemCategory", itemCategoryCodeParameter, itemCategoryParameter);
        }
    
        public virtual int InsertUpdateItemCategory(Nullable<bool> newRecord, string itemCategoryCode, string itemCategory)
        {
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(bool));
    
            var itemCategoryCodeParameter = itemCategoryCode != null ?
                new ObjectParameter("ItemCategoryCode", itemCategoryCode) :
                new ObjectParameter("ItemCategoryCode", typeof(string));
    
            var itemCategoryParameter = itemCategory != null ?
                new ObjectParameter("ItemCategory", itemCategory) :
                new ObjectParameter("ItemCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUpdateItemCategory", newRecordParameter, itemCategoryCodeParameter, itemCategoryParameter);
        }
    
        public virtual int RestoreDatabase(string fileName, string temp_dump, string database)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var temp_dumpParameter = temp_dump != null ?
                new ObjectParameter("temp_dump", temp_dump) :
                new ObjectParameter("temp_dump", typeof(string));
    
            var databaseParameter = database != null ?
                new ObjectParameter("database", database) :
                new ObjectParameter("database", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreDatabase", fileNameParameter, temp_dumpParameter, databaseParameter);
        }
    
        public virtual ObjectResult<SelectBranches_Result> SelectBranches(string option, string branchCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectBranches_Result>("SelectBranches", optionParameter, branchCodeParameter);
        }
    
        public virtual int SelectCashFlowStatementReports(string fromBranchCode, string toBranchCode, string fromDivisionCode, string toDivisionCode, string gLCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> nType, string voucherNatureCode, string reportSD, Nullable<bool> posted, Nullable<bool> postedED)
        {
            var fromBranchCodeParameter = fromBranchCode != null ?
                new ObjectParameter("FromBranchCode", fromBranchCode) :
                new ObjectParameter("FromBranchCode", typeof(string));
    
            var toBranchCodeParameter = toBranchCode != null ?
                new ObjectParameter("ToBranchCode", toBranchCode) :
                new ObjectParameter("ToBranchCode", typeof(string));
    
            var fromDivisionCodeParameter = fromDivisionCode != null ?
                new ObjectParameter("FromDivisionCode", fromDivisionCode) :
                new ObjectParameter("FromDivisionCode", typeof(string));
    
            var toDivisionCodeParameter = toDivisionCode != null ?
                new ObjectParameter("ToDivisionCode", toDivisionCode) :
                new ObjectParameter("ToDivisionCode", typeof(string));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(long));
    
            var voucherNatureCodeParameter = voucherNatureCode != null ?
                new ObjectParameter("VoucherNatureCode", voucherNatureCode) :
                new ObjectParameter("VoucherNatureCode", typeof(string));
    
            var reportSDParameter = reportSD != null ?
                new ObjectParameter("ReportSD", reportSD) :
                new ObjectParameter("ReportSD", typeof(string));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(bool));
    
            var postedEDParameter = postedED.HasValue ?
                new ObjectParameter("PostedED", postedED) :
                new ObjectParameter("PostedED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectCashFlowStatementReports", fromBranchCodeParameter, toBranchCodeParameter, fromDivisionCodeParameter, toDivisionCodeParameter, gLCodeParameter, fromDateParameter, toDateParameter, nTypeParameter, voucherNatureCodeParameter, reportSDParameter, postedParameter, postedEDParameter);
        }
    
        public virtual int SelectChartOfAccounts(string option, string customerID)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectChartOfAccounts", optionParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<SelectCities_Result> SelectCities(string option, string cityCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var cityCodeParameter = cityCode != null ?
                new ObjectParameter("CityCode", cityCode) :
                new ObjectParameter("CityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCities_Result>("SelectCities", optionParameter, cityCodeParameter);
        }
    
        public virtual ObjectResult<SelectCOACombine_Result> SelectCOACombine(string option, string controlCode, string subsidiaryCode1, string subSubsidiaryCode, string generalCode, string subsidiaryCode, string gLCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCOACombine_Result>("SelectCOACombine", optionParameter, controlCodeParameter, subsidiaryCode1Parameter, subSubsidiaryCodeParameter, generalCodeParameter, subsidiaryCodeParameter, gLCodeParameter);
        }
    
        public virtual ObjectResult<SelectCOAControls_Result> SelectCOAControls(string option, string controlCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCOAControls_Result>("SelectCOAControls", optionParameter, controlCodeParameter);
        }
    
        public virtual ObjectResult<SelectCOAGenerals_Result> SelectCOAGenerals(string option, string controlCode, string generalCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCOAGenerals_Result>("SelectCOAGenerals", optionParameter, controlCodeParameter, generalCodeParameter);
        }
    
        public virtual ObjectResult<SelectCOAListReports_Result> SelectCOAListReports(string fromCode, string toCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string oPTION)
        {
            var fromCodeParameter = fromCode != null ?
                new ObjectParameter("FromCode", fromCode) :
                new ObjectParameter("FromCode", typeof(string));
    
            var toCodeParameter = toCode != null ?
                new ObjectParameter("ToCode", toCode) :
                new ObjectParameter("ToCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCOAListReports_Result>("SelectCOAListReports", fromCodeParameter, toCodeParameter, fromDateParameter, toDateParameter, oPTIONParameter);
        }
    
        public virtual ObjectResult<SelectCOASubsidiaries_Result> SelectCOASubsidiaries(string option, string controlCode, string generalCode, string subsidiaryCode, string cOASubsidiary)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            var cOASubsidiaryParameter = cOASubsidiary != null ?
                new ObjectParameter("COASubsidiary", cOASubsidiary) :
                new ObjectParameter("COASubsidiary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCOASubsidiaries_Result>("SelectCOASubsidiaries", optionParameter, controlCodeParameter, generalCodeParameter, subsidiaryCodeParameter, cOASubsidiaryParameter);
        }
    
        public virtual ObjectResult<SelectCOASubSubSidiaries_Result> SelectCOASubSubSidiaries(string option, string controlCode, string subsidiaryCode1, string subSubsidiaryCode, string generalCode, string subsidiaryCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCOASubSubSidiaries_Result>("SelectCOASubSubSidiaries", optionParameter, controlCodeParameter, subsidiaryCode1Parameter, subSubsidiaryCodeParameter, generalCodeParameter, subsidiaryCodeParameter);
        }
    
        public virtual int SelectCOAValidation(string tableName, string cOACode, string validationType, Nullable<byte> rtnGLCode)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var cOACodeParameter = cOACode != null ?
                new ObjectParameter("COACode", cOACode) :
                new ObjectParameter("COACode", typeof(string));
    
            var validationTypeParameter = validationType != null ?
                new ObjectParameter("ValidationType", validationType) :
                new ObjectParameter("ValidationType", typeof(string));
    
            var rtnGLCodeParameter = rtnGLCode.HasValue ?
                new ObjectParameter("rtnGLCode", rtnGLCode) :
                new ObjectParameter("rtnGLCode", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectCOAValidation", tableNameParameter, cOACodeParameter, validationTypeParameter, rtnGLCodeParameter);
        }
    
        public virtual ObjectResult<SelectCustomerBills_Result> SelectCustomerBills(string option, string billNo, string customerCode, string yearMonth, string toInvoiceNo, string fromInvoiceNo, Nullable<System.DateTime> fromInvoiceDate, Nullable<System.DateTime> toInvoiceDate, string transactionNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var toInvoiceNoParameter = toInvoiceNo != null ?
                new ObjectParameter("ToInvoiceNo", toInvoiceNo) :
                new ObjectParameter("ToInvoiceNo", typeof(string));
    
            var fromInvoiceNoParameter = fromInvoiceNo != null ?
                new ObjectParameter("FromInvoiceNo", fromInvoiceNo) :
                new ObjectParameter("FromInvoiceNo", typeof(string));
    
            var fromInvoiceDateParameter = fromInvoiceDate.HasValue ?
                new ObjectParameter("FromInvoiceDate", fromInvoiceDate) :
                new ObjectParameter("FromInvoiceDate", typeof(System.DateTime));
    
            var toInvoiceDateParameter = toInvoiceDate.HasValue ?
                new ObjectParameter("ToInvoiceDate", toInvoiceDate) :
                new ObjectParameter("ToInvoiceDate", typeof(System.DateTime));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCustomerBills_Result>("SelectCustomerBills", optionParameter, billNoParameter, customerCodeParameter, yearMonthParameter, toInvoiceNoParameter, fromInvoiceNoParameter, fromInvoiceDateParameter, toInvoiceDateParameter, transactionNatureParameter);
        }
    
        public virtual ObjectResult<SelectCustomerBillsDetails_Result> SelectCustomerBillsDetails(string option, string billNo, string transactionNature, string branchCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCustomerBillsDetails_Result>("SelectCustomerBillsDetails", optionParameter, billNoParameter, transactionNatureParameter, branchCodeParameter);
        }
    
        public virtual ObjectResult<SelectCustomers_Result> SelectCustomers(string option, string customerCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCustomers_Result>("SelectCustomers", optionParameter, customerCodeParameter);
        }
    
        public virtual ObjectResult<SelectDestinationPoints_Result> SelectDestinationPoints(string option, string destinationPointCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var destinationPointCodeParameter = destinationPointCode != null ?
                new ObjectParameter("DestinationPointCode", destinationPointCode) :
                new ObjectParameter("DestinationPointCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDestinationPoints_Result>("SelectDestinationPoints", optionParameter, destinationPointCodeParameter);
        }
    
        public virtual ObjectResult<SelectDivisions_Result> SelectDivisions(string option, string divisionCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDivisions_Result>("SelectDivisions", optionParameter, divisionCodeParameter);
        }
    
        public virtual int SelectFinancialStatementReports(string fromBranchCode, string toBranchCode, string fromDivisionCode, string toDivisionCode, string fromGLCode, string toGLCode, string fromFSFCode, string toFSFCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> nType, string voucherNatureCode, string reportSD, Nullable<bool> posted, Nullable<bool> postedED)
        {
            var fromBranchCodeParameter = fromBranchCode != null ?
                new ObjectParameter("FromBranchCode", fromBranchCode) :
                new ObjectParameter("FromBranchCode", typeof(string));
    
            var toBranchCodeParameter = toBranchCode != null ?
                new ObjectParameter("ToBranchCode", toBranchCode) :
                new ObjectParameter("ToBranchCode", typeof(string));
    
            var fromDivisionCodeParameter = fromDivisionCode != null ?
                new ObjectParameter("FromDivisionCode", fromDivisionCode) :
                new ObjectParameter("FromDivisionCode", typeof(string));
    
            var toDivisionCodeParameter = toDivisionCode != null ?
                new ObjectParameter("ToDivisionCode", toDivisionCode) :
                new ObjectParameter("ToDivisionCode", typeof(string));
    
            var fromGLCodeParameter = fromGLCode != null ?
                new ObjectParameter("FromGLCode", fromGLCode) :
                new ObjectParameter("FromGLCode", typeof(string));
    
            var toGLCodeParameter = toGLCode != null ?
                new ObjectParameter("ToGLCode", toGLCode) :
                new ObjectParameter("ToGLCode", typeof(string));
    
            var fromFSFCodeParameter = fromFSFCode != null ?
                new ObjectParameter("FromFSFCode", fromFSFCode) :
                new ObjectParameter("FromFSFCode", typeof(string));
    
            var toFSFCodeParameter = toFSFCode != null ?
                new ObjectParameter("ToFSFCode", toFSFCode) :
                new ObjectParameter("ToFSFCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(long));
    
            var voucherNatureCodeParameter = voucherNatureCode != null ?
                new ObjectParameter("VoucherNatureCode", voucherNatureCode) :
                new ObjectParameter("VoucherNatureCode", typeof(string));
    
            var reportSDParameter = reportSD != null ?
                new ObjectParameter("ReportSD", reportSD) :
                new ObjectParameter("ReportSD", typeof(string));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(bool));
    
            var postedEDParameter = postedED.HasValue ?
                new ObjectParameter("PostedED", postedED) :
                new ObjectParameter("PostedED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectFinancialStatementReports", fromBranchCodeParameter, toBranchCodeParameter, fromDivisionCodeParameter, toDivisionCodeParameter, fromGLCodeParameter, toGLCodeParameter, fromFSFCodeParameter, toFSFCodeParameter, fromDateParameter, toDateParameter, nTypeParameter, voucherNatureCodeParameter, reportSDParameter, postedParameter, postedEDParameter);
        }
    
        public virtual ObjectResult<SelectFSFCombine_Result> SelectFSFCombine(string option, string controlCode, string subsidiaryCode1, string subSubsidiaryCode, string generalCode, string subsidiaryCode, string gLCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFSFCombine_Result>("SelectFSFCombine", optionParameter, controlCodeParameter, subsidiaryCode1Parameter, subSubsidiaryCodeParameter, generalCodeParameter, subsidiaryCodeParameter, gLCodeParameter);
        }
    
        public virtual ObjectResult<SelectFSFControls_Result> SelectFSFControls(string option, string controlCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFSFControls_Result>("SelectFSFControls", optionParameter, controlCodeParameter);
        }
    
        public virtual ObjectResult<SelectFSFGenerals_Result> SelectFSFGenerals(string option, string controlCode, string generalCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFSFGenerals_Result>("SelectFSFGenerals", optionParameter, controlCodeParameter, generalCodeParameter);
        }
    
        public virtual ObjectResult<SelectFSFSubsidiaries_Result> SelectFSFSubsidiaries(string option, string controlCode, string generalCode, string subsidiaryCode, string fSFSubsidiary)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            var fSFSubsidiaryParameter = fSFSubsidiary != null ?
                new ObjectParameter("FSFSubsidiary", fSFSubsidiary) :
                new ObjectParameter("FSFSubsidiary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFSFSubsidiaries_Result>("SelectFSFSubsidiaries", optionParameter, controlCodeParameter, generalCodeParameter, subsidiaryCodeParameter, fSFSubsidiaryParameter);
        }
    
        public virtual ObjectResult<SelectFSFSubSubSidiaries_Result> SelectFSFSubSubSidiaries(string option, string controlCode, string subsidiaryCode1, string subSubsidiaryCode, string generalCode, string subsidiaryCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFSFSubSubSidiaries_Result>("SelectFSFSubSubSidiaries", optionParameter, controlCodeParameter, subsidiaryCode1Parameter, subSubsidiaryCodeParameter, generalCodeParameter, subsidiaryCodeParameter);
        }
    
        public virtual int SelectGeneralLedgerReports(string fromBranchCode, string toBranchCode, string fromDivisionCode, string toDivisionCode, string fromGLCode, string toGLCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> nType, string voucherNatureCode, string reportSD, Nullable<bool> posted, Nullable<bool> postedED)
        {
            var fromBranchCodeParameter = fromBranchCode != null ?
                new ObjectParameter("FromBranchCode", fromBranchCode) :
                new ObjectParameter("FromBranchCode", typeof(string));
    
            var toBranchCodeParameter = toBranchCode != null ?
                new ObjectParameter("ToBranchCode", toBranchCode) :
                new ObjectParameter("ToBranchCode", typeof(string));
    
            var fromDivisionCodeParameter = fromDivisionCode != null ?
                new ObjectParameter("FromDivisionCode", fromDivisionCode) :
                new ObjectParameter("FromDivisionCode", typeof(string));
    
            var toDivisionCodeParameter = toDivisionCode != null ?
                new ObjectParameter("ToDivisionCode", toDivisionCode) :
                new ObjectParameter("ToDivisionCode", typeof(string));
    
            var fromGLCodeParameter = fromGLCode != null ?
                new ObjectParameter("FromGLCode", fromGLCode) :
                new ObjectParameter("FromGLCode", typeof(string));
    
            var toGLCodeParameter = toGLCode != null ?
                new ObjectParameter("ToGLCode", toGLCode) :
                new ObjectParameter("ToGLCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(long));
    
            var voucherNatureCodeParameter = voucherNatureCode != null ?
                new ObjectParameter("VoucherNatureCode", voucherNatureCode) :
                new ObjectParameter("VoucherNatureCode", typeof(string));
    
            var reportSDParameter = reportSD != null ?
                new ObjectParameter("ReportSD", reportSD) :
                new ObjectParameter("ReportSD", typeof(string));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(bool));
    
            var postedEDParameter = postedED.HasValue ?
                new ObjectParameter("PostedED", postedED) :
                new ObjectParameter("PostedED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectGeneralLedgerReports", fromBranchCodeParameter, toBranchCodeParameter, fromDivisionCodeParameter, toDivisionCodeParameter, fromGLCodeParameter, toGLCodeParameter, fromDateParameter, toDateParameter, nTypeParameter, voucherNatureCodeParameter, reportSDParameter, postedParameter, postedEDParameter);
        }
    
        public virtual ObjectResult<SelectGeneratedReferences_Result> SelectGeneratedReferences(string genFrom, string formName, string transactionNature, string transactionNo, string branchCode, string documentNature, string documentNo, string chequeNo, Nullable<long> bankCode, string oPTION)
        {
            var genFromParameter = genFrom != null ?
                new ObjectParameter("GenFrom", genFrom) :
                new ObjectParameter("GenFrom", typeof(string));
    
            var formNameParameter = formName != null ?
                new ObjectParameter("FormName", formName) :
                new ObjectParameter("FormName", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var documentNatureParameter = documentNature != null ?
                new ObjectParameter("DocumentNature", documentNature) :
                new ObjectParameter("DocumentNature", typeof(string));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var chequeNoParameter = chequeNo != null ?
                new ObjectParameter("ChequeNo", chequeNo) :
                new ObjectParameter("ChequeNo", typeof(string));
    
            var bankCodeParameter = bankCode.HasValue ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(long));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectGeneratedReferences_Result>("SelectGeneratedReferences", genFromParameter, formNameParameter, transactionNatureParameter, transactionNoParameter, branchCodeParameter, documentNatureParameter, documentNoParameter, chequeNoParameter, bankCodeParameter, oPTIONParameter);
        }
    
        public virtual ObjectResult<SelectInvoices_Result> SelectInvoices(string option, string branchCode, string transactionNo, string yearMonth, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string customerCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectInvoices_Result>("SelectInvoices", optionParameter, branchCodeParameter, transactionNoParameter, yearMonthParameter, fromDateParameter, toDateParameter, customerCodeParameter);
        }
    
        public virtual ObjectResult<SelectListReports_Result> SelectListReports(string fromCode, string toCode, Nullable<long> stationCode, string fromManufacturerCode, string toManufacturerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string oPTION)
        {
            var fromCodeParameter = fromCode != null ?
                new ObjectParameter("FromCode", fromCode) :
                new ObjectParameter("FromCode", typeof(string));
    
            var toCodeParameter = toCode != null ?
                new ObjectParameter("ToCode", toCode) :
                new ObjectParameter("ToCode", typeof(string));
    
            var stationCodeParameter = stationCode.HasValue ?
                new ObjectParameter("StationCode", stationCode) :
                new ObjectParameter("StationCode", typeof(long));
    
            var fromManufacturerCodeParameter = fromManufacturerCode != null ?
                new ObjectParameter("FromManufacturerCode", fromManufacturerCode) :
                new ObjectParameter("FromManufacturerCode", typeof(string));
    
            var toManufacturerCodeParameter = toManufacturerCode != null ?
                new ObjectParameter("ToManufacturerCode", toManufacturerCode) :
                new ObjectParameter("ToManufacturerCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectListReports_Result>("SelectListReports", fromCodeParameter, toCodeParameter, stationCodeParameter, fromManufacturerCodeParameter, toManufacturerCodeParameter, fromDateParameter, toDateParameter, oPTIONParameter);
        }
    
        public virtual ObjectResult<SelectOpeningBalances_Result> SelectOpeningBalances(string option, string branchCode, Nullable<System.DateTime> closingDate)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var closingDateParameter = closingDate.HasValue ?
                new ObjectParameter("ClosingDate", closingDate) :
                new ObjectParameter("ClosingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOpeningBalances_Result>("SelectOpeningBalances", optionParameter, branchCodeParameter, closingDateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SelectPosting(Nullable<System.DateTime> postingDate, string debitors, string creditors, Nullable<int> nType)
        {
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var debitorsParameter = debitors != null ?
                new ObjectParameter("Debitors", debitors) :
                new ObjectParameter("Debitors", typeof(string));
    
            var creditorsParameter = creditors != null ?
                new ObjectParameter("Creditors", creditors) :
                new ObjectParameter("Creditors", typeof(string));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SelectPosting", postingDateParameter, debitorsParameter, creditorsParameter, nTypeParameter);
        }
    
        public virtual ObjectResult<SelectProductRates_Result> SelectProductRates(string option, Nullable<System.DateTime> effectiveDate, string stationPointCode, string destinationPointCode, string productCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var stationPointCodeParameter = stationPointCode != null ?
                new ObjectParameter("StationPointCode", stationPointCode) :
                new ObjectParameter("StationPointCode", typeof(string));
    
            var destinationPointCodeParameter = destinationPointCode != null ?
                new ObjectParameter("DestinationPointCode", destinationPointCode) :
                new ObjectParameter("DestinationPointCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectProductRates_Result>("SelectProductRates", optionParameter, effectiveDateParameter, stationPointCodeParameter, destinationPointCodeParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<SelectProducts_Result> SelectProducts(string option, string productCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectProducts_Result>("SelectProducts", optionParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<SelectProductValues_Result> SelectProductValues(string option, Nullable<System.DateTime> effectiveDate, string productCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectProductValues_Result>("SelectProductValues", optionParameter, effectiveDateParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<SelectReceipts_Result> SelectReceipts(string option, string branchCode, Nullable<int> transactionNo, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string yearMonth, string customerCode, string billNo)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo.HasValue ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectReceipts_Result>("SelectReceipts", optionParameter, branchCodeParameter, transactionNoParameter, fromDateParameter, toDateParameter, yearMonthParameter, customerCodeParameter, billNoParameter);
        }
    
        public virtual ObjectResult<SelectRegions_Result> SelectRegions(string option, string regionCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var regionCodeParameter = regionCode != null ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRegions_Result>("SelectRegions", optionParameter, regionCodeParameter);
        }
    
        public virtual ObjectResult<SelectStationPoints_Result> SelectStationPoints(string option, string stationPointCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var stationPointCodeParameter = stationPointCode != null ?
                new ObjectParameter("StationPointCode", stationPointCode) :
                new ObjectParameter("StationPointCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStationPoints_Result>("SelectStationPoints", optionParameter, stationPointCodeParameter);
        }
    
        public virtual ObjectResult<SelectSuppliers_Result> SelectSuppliers(string option, string supplierCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectSuppliers_Result>("SelectSuppliers", optionParameter, supplierCodeParameter);
        }
    
        public virtual int SelectTransactionDocumentReports(string fromCode, string toCode, Nullable<long> stationCode, string fromPartyCode, string toPartyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactionNature, string fromTransactionNumber, string toTransactionNumber, string oPTION)
        {
            var fromCodeParameter = fromCode != null ?
                new ObjectParameter("FromCode", fromCode) :
                new ObjectParameter("FromCode", typeof(string));
    
            var toCodeParameter = toCode != null ?
                new ObjectParameter("ToCode", toCode) :
                new ObjectParameter("ToCode", typeof(string));
    
            var stationCodeParameter = stationCode.HasValue ?
                new ObjectParameter("StationCode", stationCode) :
                new ObjectParameter("StationCode", typeof(long));
    
            var fromPartyCodeParameter = fromPartyCode != null ?
                new ObjectParameter("FromPartyCode", fromPartyCode) :
                new ObjectParameter("FromPartyCode", typeof(string));
    
            var toPartyCodeParameter = toPartyCode != null ?
                new ObjectParameter("ToPartyCode", toPartyCode) :
                new ObjectParameter("ToPartyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var fromTransactionNumberParameter = fromTransactionNumber != null ?
                new ObjectParameter("FromTransactionNumber", fromTransactionNumber) :
                new ObjectParameter("FromTransactionNumber", typeof(string));
    
            var toTransactionNumberParameter = toTransactionNumber != null ?
                new ObjectParameter("ToTransactionNumber", toTransactionNumber) :
                new ObjectParameter("ToTransactionNumber", typeof(string));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectTransactionDocumentReports", fromCodeParameter, toCodeParameter, stationCodeParameter, fromPartyCodeParameter, toPartyCodeParameter, fromDateParameter, toDateParameter, transactionNatureParameter, fromTransactionNumberParameter, toTransactionNumberParameter, oPTIONParameter);
        }
    
        public virtual ObjectResult<SelectTransactionListReports_Result> SelectTransactionListReports(string fromCode, string toCode, Nullable<long> stationCode, string fromVehicleCode, string toVehicleCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactionNature, string fromTransactionNumber, string toTransactionNumber, string oPTION, string fromItemCode, string toItemCode)
        {
            var fromCodeParameter = fromCode != null ?
                new ObjectParameter("FromCode", fromCode) :
                new ObjectParameter("FromCode", typeof(string));
    
            var toCodeParameter = toCode != null ?
                new ObjectParameter("ToCode", toCode) :
                new ObjectParameter("ToCode", typeof(string));
    
            var stationCodeParameter = stationCode.HasValue ?
                new ObjectParameter("StationCode", stationCode) :
                new ObjectParameter("StationCode", typeof(long));
    
            var fromVehicleCodeParameter = fromVehicleCode != null ?
                new ObjectParameter("FromVehicleCode", fromVehicleCode) :
                new ObjectParameter("FromVehicleCode", typeof(string));
    
            var toVehicleCodeParameter = toVehicleCode != null ?
                new ObjectParameter("ToVehicleCode", toVehicleCode) :
                new ObjectParameter("ToVehicleCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var fromTransactionNumberParameter = fromTransactionNumber != null ?
                new ObjectParameter("FromTransactionNumber", fromTransactionNumber) :
                new ObjectParameter("FromTransactionNumber", typeof(string));
    
            var toTransactionNumberParameter = toTransactionNumber != null ?
                new ObjectParameter("ToTransactionNumber", toTransactionNumber) :
                new ObjectParameter("ToTransactionNumber", typeof(string));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            var fromItemCodeParameter = fromItemCode != null ?
                new ObjectParameter("FromItemCode", fromItemCode) :
                new ObjectParameter("FromItemCode", typeof(string));
    
            var toItemCodeParameter = toItemCode != null ?
                new ObjectParameter("ToItemCode", toItemCode) :
                new ObjectParameter("ToItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectTransactionListReports_Result>("SelectTransactionListReports", fromCodeParameter, toCodeParameter, stationCodeParameter, fromVehicleCodeParameter, toVehicleCodeParameter, fromDateParameter, toDateParameter, transactionNatureParameter, fromTransactionNumberParameter, toTransactionNumberParameter, oPTIONParameter, fromItemCodeParameter, toItemCodeParameter);
        }
    
        public virtual ObjectResult<SelectTransactionNatures_Result> SelectTransactionNatures(string selectedTransNatureCode, string oPTION, string system, string transactionNatureCode)
        {
            var selectedTransNatureCodeParameter = selectedTransNatureCode != null ?
                new ObjectParameter("SelectedTransNatureCode", selectedTransNatureCode) :
                new ObjectParameter("SelectedTransNatureCode", typeof(string));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            var systemParameter = system != null ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(string));
    
            var transactionNatureCodeParameter = transactionNatureCode != null ?
                new ObjectParameter("TransactionNatureCode", transactionNatureCode) :
                new ObjectParameter("TransactionNatureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectTransactionNatures_Result>("SelectTransactionNatures", selectedTransNatureCodeParameter, oPTIONParameter, systemParameter, transactionNatureCodeParameter);
        }
    
        public virtual int SelectTransactionsDetails(string option, string branchCode, Nullable<int> transactionNo, string transactionNature)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo.HasValue ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(int));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectTransactionsDetails", optionParameter, branchCodeParameter, transactionNoParameter, transactionNatureParameter);
        }
    
        public virtual ObjectResult<SelectTransactionTypes_Result> SelectTransactionTypes(string oPTION, string transactionTypeCode, string natureCode)
        {
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            var transactionTypeCodeParameter = transactionTypeCode != null ?
                new ObjectParameter("TransactionTypeCode", transactionTypeCode) :
                new ObjectParameter("TransactionTypeCode", typeof(string));
    
            var natureCodeParameter = natureCode != null ?
                new ObjectParameter("NatureCode", natureCode) :
                new ObjectParameter("NatureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectTransactionTypes_Result>("SelectTransactionTypes", oPTIONParameter, transactionTypeCodeParameter, natureCodeParameter);
        }
    
        public virtual ObjectResult<SelectUserSecurities_Result> SelectUserSecurities(string userName, string password, string empCode, Nullable<bool> isLoggedIn, Nullable<bool> isAdministrator, Nullable<bool> normalShutDown, Nullable<bool> isActive, string s_Account, string t_Order, Nullable<bool> r_RecVoucher, string option, string userID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var empCodeParameter = empCode != null ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(string));
    
            var isLoggedInParameter = isLoggedIn.HasValue ?
                new ObjectParameter("IsLoggedIn", isLoggedIn) :
                new ObjectParameter("IsLoggedIn", typeof(bool));
    
            var isAdministratorParameter = isAdministrator.HasValue ?
                new ObjectParameter("IsAdministrator", isAdministrator) :
                new ObjectParameter("IsAdministrator", typeof(bool));
    
            var normalShutDownParameter = normalShutDown.HasValue ?
                new ObjectParameter("NormalShutDown", normalShutDown) :
                new ObjectParameter("NormalShutDown", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var s_AccountParameter = s_Account != null ?
                new ObjectParameter("S_Account", s_Account) :
                new ObjectParameter("S_Account", typeof(string));
    
            var t_OrderParameter = t_Order != null ?
                new ObjectParameter("T_Order", t_Order) :
                new ObjectParameter("T_Order", typeof(string));
    
            var r_RecVoucherParameter = r_RecVoucher.HasValue ?
                new ObjectParameter("R_RecVoucher", r_RecVoucher) :
                new ObjectParameter("R_RecVoucher", typeof(bool));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUserSecurities_Result>("SelectUserSecurities", userNameParameter, passwordParameter, empCodeParameter, isLoggedInParameter, isAdministratorParameter, normalShutDownParameter, isActiveParameter, s_AccountParameter, t_OrderParameter, r_RecVoucherParameter, optionParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SelectVehicleAdjustments_Result> SelectVehicleAdjustments(string option, string branchCode, string transactionNo, string transactionNature, Nullable<System.DateTime> transactionDate, string nature, string vehicleCode, string invoiceNo, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactionTypeCode, string yearMonth)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var natureParameter = nature != null ?
                new ObjectParameter("Nature", nature) :
                new ObjectParameter("Nature", typeof(string));
    
            var vehicleCodeParameter = vehicleCode != null ?
                new ObjectParameter("VehicleCode", vehicleCode) :
                new ObjectParameter("VehicleCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transactionTypeCodeParameter = transactionTypeCode != null ?
                new ObjectParameter("TransactionTypeCode", transactionTypeCode) :
                new ObjectParameter("TransactionTypeCode", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVehicleAdjustments_Result>("SelectVehicleAdjustments", optionParameter, branchCodeParameter, transactionNoParameter, transactionNatureParameter, transactionDateParameter, natureParameter, vehicleCodeParameter, invoiceNoParameter, fromDateParameter, toDateParameter, transactionTypeCodeParameter, yearMonthParameter);
        }
    
        public virtual ObjectResult<SelectVehicleAdjustmentsDetails_Result> SelectVehicleAdjustmentsDetails(string option, string transactionNo, string transactionNature, string branchCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVehicleAdjustmentsDetails_Result>("SelectVehicleAdjustmentsDetails", optionParameter, transactionNoParameter, transactionNatureParameter, branchCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SelectVehicleBillsReports(string fromBranchCode, string toBranchCode, string fromDivisionCode, string toDivisionCode, string fromOwnerCode, string toOwnerCode, string fromGLCode, string fromVehicleCode, string toVehicleCode, string toGLCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> nType, string voucherNatureCode, string reportSD, Nullable<bool> posted, Nullable<bool> postedED)
        {
            var fromBranchCodeParameter = fromBranchCode != null ?
                new ObjectParameter("FromBranchCode", fromBranchCode) :
                new ObjectParameter("FromBranchCode", typeof(string));
    
            var toBranchCodeParameter = toBranchCode != null ?
                new ObjectParameter("ToBranchCode", toBranchCode) :
                new ObjectParameter("ToBranchCode", typeof(string));
    
            var fromDivisionCodeParameter = fromDivisionCode != null ?
                new ObjectParameter("FromDivisionCode", fromDivisionCode) :
                new ObjectParameter("FromDivisionCode", typeof(string));
    
            var toDivisionCodeParameter = toDivisionCode != null ?
                new ObjectParameter("ToDivisionCode", toDivisionCode) :
                new ObjectParameter("ToDivisionCode", typeof(string));
    
            var fromOwnerCodeParameter = fromOwnerCode != null ?
                new ObjectParameter("FromOwnerCode", fromOwnerCode) :
                new ObjectParameter("FromOwnerCode", typeof(string));
    
            var toOwnerCodeParameter = toOwnerCode != null ?
                new ObjectParameter("ToOwnerCode", toOwnerCode) :
                new ObjectParameter("ToOwnerCode", typeof(string));
    
            var fromGLCodeParameter = fromGLCode != null ?
                new ObjectParameter("FromGLCode", fromGLCode) :
                new ObjectParameter("FromGLCode", typeof(string));
    
            var fromVehicleCodeParameter = fromVehicleCode != null ?
                new ObjectParameter("FromVehicleCode", fromVehicleCode) :
                new ObjectParameter("FromVehicleCode", typeof(string));
    
            var toVehicleCodeParameter = toVehicleCode != null ?
                new ObjectParameter("ToVehicleCode", toVehicleCode) :
                new ObjectParameter("ToVehicleCode", typeof(string));
    
            var toGLCodeParameter = toGLCode != null ?
                new ObjectParameter("ToGLCode", toGLCode) :
                new ObjectParameter("ToGLCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(long));
    
            var voucherNatureCodeParameter = voucherNatureCode != null ?
                new ObjectParameter("VoucherNatureCode", voucherNatureCode) :
                new ObjectParameter("VoucherNatureCode", typeof(string));
    
            var reportSDParameter = reportSD != null ?
                new ObjectParameter("ReportSD", reportSD) :
                new ObjectParameter("ReportSD", typeof(string));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(bool));
    
            var postedEDParameter = postedED.HasValue ?
                new ObjectParameter("PostedED", postedED) :
                new ObjectParameter("PostedED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectVehicleBillsReports", fromBranchCodeParameter, toBranchCodeParameter, fromDivisionCodeParameter, toDivisionCodeParameter, fromOwnerCodeParameter, toOwnerCodeParameter, fromGLCodeParameter, fromVehicleCodeParameter, toVehicleCodeParameter, toGLCodeParameter, fromDateParameter, toDateParameter, nTypeParameter, voucherNatureCodeParameter, reportSDParameter, postedParameter, postedEDParameter);
        }
    
        public virtual int SelectVehicleBillsReportsWGL(string fromBranchCode, string toBranchCode, string fromDivisionCode, string toDivisionCode, string fromOwnerCode, string toOwnerCode, string fromVehicleCode, string toVehicleCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> nType, string vehicleAdjustmentNatureCode, string reportSD, Nullable<bool> posted, Nullable<bool> postedED)
        {
            var fromBranchCodeParameter = fromBranchCode != null ?
                new ObjectParameter("FromBranchCode", fromBranchCode) :
                new ObjectParameter("FromBranchCode", typeof(string));
    
            var toBranchCodeParameter = toBranchCode != null ?
                new ObjectParameter("ToBranchCode", toBranchCode) :
                new ObjectParameter("ToBranchCode", typeof(string));
    
            var fromDivisionCodeParameter = fromDivisionCode != null ?
                new ObjectParameter("FromDivisionCode", fromDivisionCode) :
                new ObjectParameter("FromDivisionCode", typeof(string));
    
            var toDivisionCodeParameter = toDivisionCode != null ?
                new ObjectParameter("ToDivisionCode", toDivisionCode) :
                new ObjectParameter("ToDivisionCode", typeof(string));
    
            var fromOwnerCodeParameter = fromOwnerCode != null ?
                new ObjectParameter("FromOwnerCode", fromOwnerCode) :
                new ObjectParameter("FromOwnerCode", typeof(string));
    
            var toOwnerCodeParameter = toOwnerCode != null ?
                new ObjectParameter("ToOwnerCode", toOwnerCode) :
                new ObjectParameter("ToOwnerCode", typeof(string));
    
            var fromVehicleCodeParameter = fromVehicleCode != null ?
                new ObjectParameter("FromVehicleCode", fromVehicleCode) :
                new ObjectParameter("FromVehicleCode", typeof(string));
    
            var toVehicleCodeParameter = toVehicleCode != null ?
                new ObjectParameter("ToVehicleCode", toVehicleCode) :
                new ObjectParameter("ToVehicleCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(long));
    
            var vehicleAdjustmentNatureCodeParameter = vehicleAdjustmentNatureCode != null ?
                new ObjectParameter("VehicleAdjustmentNatureCode", vehicleAdjustmentNatureCode) :
                new ObjectParameter("VehicleAdjustmentNatureCode", typeof(string));
    
            var reportSDParameter = reportSD != null ?
                new ObjectParameter("ReportSD", reportSD) :
                new ObjectParameter("ReportSD", typeof(string));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(bool));
    
            var postedEDParameter = postedED.HasValue ?
                new ObjectParameter("PostedED", postedED) :
                new ObjectParameter("PostedED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectVehicleBillsReportsWGL", fromBranchCodeParameter, toBranchCodeParameter, fromDivisionCodeParameter, toDivisionCodeParameter, fromOwnerCodeParameter, toOwnerCodeParameter, fromVehicleCodeParameter, toVehicleCodeParameter, fromDateParameter, toDateParameter, nTypeParameter, vehicleAdjustmentNatureCodeParameter, reportSDParameter, postedParameter, postedEDParameter);
        }
    
        public virtual ObjectResult<SelectVehicleFreightStatementsReports_Result> SelectVehicleFreightStatementsReports(string branchCode, string fromPartyCode, string toPartyCode, string fromCode, string toCode, string fromVehicleCode, string toVehicleCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string oPTION, Nullable<long> nType)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var fromPartyCodeParameter = fromPartyCode != null ?
                new ObjectParameter("FromPartyCode", fromPartyCode) :
                new ObjectParameter("FromPartyCode", typeof(string));
    
            var toPartyCodeParameter = toPartyCode != null ?
                new ObjectParameter("ToPartyCode", toPartyCode) :
                new ObjectParameter("ToPartyCode", typeof(string));
    
            var fromCodeParameter = fromCode != null ?
                new ObjectParameter("FromCode", fromCode) :
                new ObjectParameter("FromCode", typeof(string));
    
            var toCodeParameter = toCode != null ?
                new ObjectParameter("ToCode", toCode) :
                new ObjectParameter("ToCode", typeof(string));
    
            var fromVehicleCodeParameter = fromVehicleCode != null ?
                new ObjectParameter("FromVehicleCode", fromVehicleCode) :
                new ObjectParameter("FromVehicleCode", typeof(string));
    
            var toVehicleCodeParameter = toVehicleCode != null ?
                new ObjectParameter("ToVehicleCode", toVehicleCode) :
                new ObjectParameter("ToVehicleCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVehicleFreightStatementsReports_Result>("SelectVehicleFreightStatementsReports", branchCodeParameter, fromPartyCodeParameter, toPartyCodeParameter, fromCodeParameter, toCodeParameter, fromVehicleCodeParameter, toVehicleCodeParameter, fromDateParameter, toDateParameter, oPTIONParameter, nTypeParameter);
        }
    
        public virtual int SelectVehicleLedgerReports(string fromBranchCode, string toBranchCode, string fromDivisionCode, string toDivisionCode, string fromOwnerCode, string toOwnerCode, string fromGLCode, string fromVehicleCode, string toVehicleCode, string toGLCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> nType, string voucherNatureCode, string reportSD, Nullable<bool> posted, Nullable<bool> postedED)
        {
            var fromBranchCodeParameter = fromBranchCode != null ?
                new ObjectParameter("FromBranchCode", fromBranchCode) :
                new ObjectParameter("FromBranchCode", typeof(string));
    
            var toBranchCodeParameter = toBranchCode != null ?
                new ObjectParameter("ToBranchCode", toBranchCode) :
                new ObjectParameter("ToBranchCode", typeof(string));
    
            var fromDivisionCodeParameter = fromDivisionCode != null ?
                new ObjectParameter("FromDivisionCode", fromDivisionCode) :
                new ObjectParameter("FromDivisionCode", typeof(string));
    
            var toDivisionCodeParameter = toDivisionCode != null ?
                new ObjectParameter("ToDivisionCode", toDivisionCode) :
                new ObjectParameter("ToDivisionCode", typeof(string));
    
            var fromOwnerCodeParameter = fromOwnerCode != null ?
                new ObjectParameter("FromOwnerCode", fromOwnerCode) :
                new ObjectParameter("FromOwnerCode", typeof(string));
    
            var toOwnerCodeParameter = toOwnerCode != null ?
                new ObjectParameter("ToOwnerCode", toOwnerCode) :
                new ObjectParameter("ToOwnerCode", typeof(string));
    
            var fromGLCodeParameter = fromGLCode != null ?
                new ObjectParameter("FromGLCode", fromGLCode) :
                new ObjectParameter("FromGLCode", typeof(string));
    
            var fromVehicleCodeParameter = fromVehicleCode != null ?
                new ObjectParameter("FromVehicleCode", fromVehicleCode) :
                new ObjectParameter("FromVehicleCode", typeof(string));
    
            var toVehicleCodeParameter = toVehicleCode != null ?
                new ObjectParameter("ToVehicleCode", toVehicleCode) :
                new ObjectParameter("ToVehicleCode", typeof(string));
    
            var toGLCodeParameter = toGLCode != null ?
                new ObjectParameter("ToGLCode", toGLCode) :
                new ObjectParameter("ToGLCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(long));
    
            var voucherNatureCodeParameter = voucherNatureCode != null ?
                new ObjectParameter("VoucherNatureCode", voucherNatureCode) :
                new ObjectParameter("VoucherNatureCode", typeof(string));
    
            var reportSDParameter = reportSD != null ?
                new ObjectParameter("ReportSD", reportSD) :
                new ObjectParameter("ReportSD", typeof(string));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(bool));
    
            var postedEDParameter = postedED.HasValue ?
                new ObjectParameter("PostedED", postedED) :
                new ObjectParameter("PostedED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectVehicleLedgerReports", fromBranchCodeParameter, toBranchCodeParameter, fromDivisionCodeParameter, toDivisionCodeParameter, fromOwnerCodeParameter, toOwnerCodeParameter, fromGLCodeParameter, fromVehicleCodeParameter, toVehicleCodeParameter, toGLCodeParameter, fromDateParameter, toDateParameter, nTypeParameter, voucherNatureCodeParameter, reportSDParameter, postedParameter, postedEDParameter);
        }
    
        public virtual ObjectResult<SelectVehicleOwners_Result> SelectVehicleOwners(string option, string ownerCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var ownerCodeParameter = ownerCode != null ?
                new ObjectParameter("OwnerCode", ownerCode) :
                new ObjectParameter("OwnerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVehicleOwners_Result>("SelectVehicleOwners", optionParameter, ownerCodeParameter);
        }
    
        public virtual ObjectResult<SelectVehicles_Result> SelectVehicles(string option, string vehicleCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var vehicleCodeParameter = vehicleCode != null ?
                new ObjectParameter("VehicleCode", vehicleCode) :
                new ObjectParameter("VehicleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVehicles_Result>("SelectVehicles", optionParameter, vehicleCodeParameter);
        }
    
        public virtual ObjectResult<SelectVoucherDocumentReports_Result> SelectVoucherDocumentReports(string fromCode, string toCode, Nullable<long> stationCode, string fromPartyCode, string toPartyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactionNature, string fromTransactionNumber, string toTransactionNumber, string oPTION)
        {
            var fromCodeParameter = fromCode != null ?
                new ObjectParameter("FromCode", fromCode) :
                new ObjectParameter("FromCode", typeof(string));
    
            var toCodeParameter = toCode != null ?
                new ObjectParameter("ToCode", toCode) :
                new ObjectParameter("ToCode", typeof(string));
    
            var stationCodeParameter = stationCode.HasValue ?
                new ObjectParameter("StationCode", stationCode) :
                new ObjectParameter("StationCode", typeof(long));
    
            var fromPartyCodeParameter = fromPartyCode != null ?
                new ObjectParameter("FromPartyCode", fromPartyCode) :
                new ObjectParameter("FromPartyCode", typeof(string));
    
            var toPartyCodeParameter = toPartyCode != null ?
                new ObjectParameter("ToPartyCode", toPartyCode) :
                new ObjectParameter("ToPartyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var fromTransactionNumberParameter = fromTransactionNumber != null ?
                new ObjectParameter("FromTransactionNumber", fromTransactionNumber) :
                new ObjectParameter("FromTransactionNumber", typeof(string));
    
            var toTransactionNumberParameter = toTransactionNumber != null ?
                new ObjectParameter("ToTransactionNumber", toTransactionNumber) :
                new ObjectParameter("ToTransactionNumber", typeof(string));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVoucherDocumentReports_Result>("SelectVoucherDocumentReports", fromCodeParameter, toCodeParameter, stationCodeParameter, fromPartyCodeParameter, toPartyCodeParameter, fromDateParameter, toDateParameter, transactionNatureParameter, fromTransactionNumberParameter, toTransactionNumberParameter, oPTIONParameter);
        }
    
        public virtual ObjectResult<SelectVoucherListReports_Result> SelectVoucherListReports(string fromCode, string toCode, Nullable<long> stationCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNature, string fromTransactionNumber, string toTransactionNumber, string oPTION, string fromGLCode, string toGLCode)
        {
            var fromCodeParameter = fromCode != null ?
                new ObjectParameter("FromCode", fromCode) :
                new ObjectParameter("FromCode", typeof(string));
    
            var toCodeParameter = toCode != null ?
                new ObjectParameter("ToCode", toCode) :
                new ObjectParameter("ToCode", typeof(string));
    
            var stationCodeParameter = stationCode.HasValue ?
                new ObjectParameter("StationCode", stationCode) :
                new ObjectParameter("StationCode", typeof(long));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var voucherNatureParameter = voucherNature != null ?
                new ObjectParameter("VoucherNature", voucherNature) :
                new ObjectParameter("VoucherNature", typeof(string));
    
            var fromTransactionNumberParameter = fromTransactionNumber != null ?
                new ObjectParameter("FromTransactionNumber", fromTransactionNumber) :
                new ObjectParameter("FromTransactionNumber", typeof(string));
    
            var toTransactionNumberParameter = toTransactionNumber != null ?
                new ObjectParameter("ToTransactionNumber", toTransactionNumber) :
                new ObjectParameter("ToTransactionNumber", typeof(string));
    
            var oPTIONParameter = oPTION != null ?
                new ObjectParameter("OPTION", oPTION) :
                new ObjectParameter("OPTION", typeof(string));
    
            var fromGLCodeParameter = fromGLCode != null ?
                new ObjectParameter("FromGLCode", fromGLCode) :
                new ObjectParameter("FromGLCode", typeof(string));
    
            var toGLCodeParameter = toGLCode != null ?
                new ObjectParameter("ToGLCode", toGLCode) :
                new ObjectParameter("ToGLCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVoucherListReports_Result>("SelectVoucherListReports", fromCodeParameter, toCodeParameter, stationCodeParameter, fromDateParameter, toDateParameter, voucherNatureParameter, fromTransactionNumberParameter, toTransactionNumberParameter, oPTIONParameter, fromGLCodeParameter, toGLCodeParameter);
        }
    
        public virtual ObjectResult<SelectVouchers_Result> SelectVouchers(string option, string branchCode, string transactionNo, string transactionNature, string nature, string yearMonth)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var natureParameter = nature != null ?
                new ObjectParameter("Nature", nature) :
                new ObjectParameter("Nature", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVouchers_Result>("SelectVouchers", optionParameter, branchCodeParameter, transactionNoParameter, transactionNatureParameter, natureParameter, yearMonthParameter);
        }
    
        public virtual ObjectResult<SelectVouchersDetails_Result> SelectVouchersDetails(string option, string transactionNo, string transactionNature, string branchCode)
        {
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectVouchersDetails_Result>("SelectVouchersDetails", optionParameter, transactionNoParameter, transactionNatureParameter, branchCodeParameter);
        }
    
        public virtual int UpdateBranches(string branchCode, string branchName, Nullable<System.DateTime> definitionDate, string gLCode, string gLDescription, Nullable<long> newRecord)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            var gLDescriptionParameter = gLDescription != null ?
                new ObjectParameter("GLDescription", gLDescription) :
                new ObjectParameter("GLDescription", typeof(string));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBranches", branchCodeParameter, branchNameParameter, definitionDateParameter, gLCodeParameter, gLDescriptionParameter, newRecordParameter);
        }
    
        public virtual int UpdateCities(string cityCode, string city, string urduTitle, Nullable<System.DateTime> definitionDate, Nullable<long> newRecord)
        {
            var cityCodeParameter = cityCode != null ?
                new ObjectParameter("CityCode", cityCode) :
                new ObjectParameter("CityCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCities", cityCodeParameter, cityParameter, urduTitleParameter, definitionDateParameter, newRecordParameter);
        }
    
        public virtual int UpdateCOAControls(string controlCode, string controlDescription, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCOAControls", controlCodeParameter, controlDescriptionParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateCOAGenerals(string controlCode, string controlDescription, string generalCode, string generalDescription, Nullable<System.DateTime> definitionDate, string fSFGLCode, string fSFGLDescription, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var generalDescriptionParameter = generalDescription != null ?
                new ObjectParameter("GeneralDescription", generalDescription) :
                new ObjectParameter("GeneralDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var fSFGLCodeParameter = fSFGLCode != null ?
                new ObjectParameter("FSFGLCode", fSFGLCode) :
                new ObjectParameter("FSFGLCode", typeof(string));
    
            var fSFGLDescriptionParameter = fSFGLDescription != null ?
                new ObjectParameter("FSFGLDescription", fSFGLDescription) :
                new ObjectParameter("FSFGLDescription", typeof(string));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCOAGenerals", controlCodeParameter, controlDescriptionParameter, generalCodeParameter, generalDescriptionParameter, definitionDateParameter, fSFGLCodeParameter, fSFGLDescriptionParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateCOASubsidiaries(string controlCode, string generalCode, string generalDescription, string subsidiaryCode, string controlDescription, string subsidiaryDescription, string fSFGLCode, string fSFGLDescription, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var generalDescriptionParameter = generalDescription != null ?
                new ObjectParameter("GeneralDescription", generalDescription) :
                new ObjectParameter("GeneralDescription", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var subsidiaryDescriptionParameter = subsidiaryDescription != null ?
                new ObjectParameter("SubsidiaryDescription", subsidiaryDescription) :
                new ObjectParameter("SubsidiaryDescription", typeof(string));
    
            var fSFGLCodeParameter = fSFGLCode != null ?
                new ObjectParameter("FSFGLCode", fSFGLCode) :
                new ObjectParameter("FSFGLCode", typeof(string));
    
            var fSFGLDescriptionParameter = fSFGLDescription != null ?
                new ObjectParameter("FSFGLDescription", fSFGLDescription) :
                new ObjectParameter("FSFGLDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCOASubsidiaries", controlCodeParameter, generalCodeParameter, generalDescriptionParameter, subsidiaryCodeParameter, controlDescriptionParameter, subsidiaryDescriptionParameter, fSFGLCodeParameter, fSFGLDescriptionParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateCOASubSubsidiaries(string controlCode, string generalCode, string subsidiaryCode1, string controlDescription, string generalDescription, string subsidiaryDescription, string subSubsidiaryCode, string fSFGLCode, string fSFGLDescription, string subSubsidiaryDescription, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var generalDescriptionParameter = generalDescription != null ?
                new ObjectParameter("GeneralDescription", generalDescription) :
                new ObjectParameter("GeneralDescription", typeof(string));
    
            var subsidiaryDescriptionParameter = subsidiaryDescription != null ?
                new ObjectParameter("SubsidiaryDescription", subsidiaryDescription) :
                new ObjectParameter("SubsidiaryDescription", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            var fSFGLCodeParameter = fSFGLCode != null ?
                new ObjectParameter("FSFGLCode", fSFGLCode) :
                new ObjectParameter("FSFGLCode", typeof(string));
    
            var fSFGLDescriptionParameter = fSFGLDescription != null ?
                new ObjectParameter("FSFGLDescription", fSFGLDescription) :
                new ObjectParameter("FSFGLDescription", typeof(string));
    
            var subSubsidiaryDescriptionParameter = subSubsidiaryDescription != null ?
                new ObjectParameter("SubSubsidiaryDescription", subSubsidiaryDescription) :
                new ObjectParameter("SubSubsidiaryDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCOASubSubsidiaries", controlCodeParameter, generalCodeParameter, subsidiaryCode1Parameter, controlDescriptionParameter, generalDescriptionParameter, subsidiaryDescriptionParameter, subSubsidiaryCodeParameter, fSFGLCodeParameter, fSFGLDescriptionParameter, subSubsidiaryDescriptionParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateCountries(string countryCode, string itemGroupCode, string country, string itemGroup, Nullable<long> newRecord)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var itemGroupCodeParameter = itemGroupCode != null ?
                new ObjectParameter("ItemGroupCode", itemGroupCode) :
                new ObjectParameter("ItemGroupCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var itemGroupParameter = itemGroup != null ?
                new ObjectParameter("ItemGroup", itemGroup) :
                new ObjectParameter("ItemGroup", typeof(string));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCountries", countryCodeParameter, itemGroupCodeParameter, countryParameter, itemGroupParameter, newRecordParameter);
        }
    
        public virtual ObjectResult<string> UpdateCustomerBills(string billNo, string customerCode, string customerName, Nullable<System.DateTime> billDate, Nullable<long> newRecord)
        {
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var billDateParameter = billDate.HasValue ?
                new ObjectParameter("BillDate", billDate) :
                new ObjectParameter("BillDate", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateCustomerBills", billNoParameter, customerCodeParameter, customerNameParameter, billDateParameter, newRecordParameter);
        }
    
        public virtual int UpdateCustomerBillsDetails(string billNo, string branchCode, string branch, string tokenNo, string destinationPoint, string stationPoint, string invoiceNo, Nullable<System.DateTime> invoiceDate, string vehicle, string product, Nullable<decimal> amount, Nullable<decimal> shortage, Nullable<long> newRecord)
        {
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var tokenNoParameter = tokenNo != null ?
                new ObjectParameter("TokenNo", tokenNo) :
                new ObjectParameter("TokenNo", typeof(string));
    
            var destinationPointParameter = destinationPoint != null ?
                new ObjectParameter("DestinationPoint", destinationPoint) :
                new ObjectParameter("DestinationPoint", typeof(string));
    
            var stationPointParameter = stationPoint != null ?
                new ObjectParameter("StationPoint", stationPoint) :
                new ObjectParameter("StationPoint", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var vehicleParameter = vehicle != null ?
                new ObjectParameter("Vehicle", vehicle) :
                new ObjectParameter("Vehicle", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var shortageParameter = shortage.HasValue ?
                new ObjectParameter("Shortage", shortage) :
                new ObjectParameter("Shortage", typeof(decimal));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerBillsDetails", billNoParameter, branchCodeParameter, branchParameter, tokenNoParameter, destinationPointParameter, stationPointParameter, invoiceNoParameter, invoiceDateParameter, vehicleParameter, productParameter, amountParameter, shortageParameter, newRecordParameter);
        }
    
        public virtual int UpdateCustomers(string customerCode, string customerName, string urduTitle, string address, string nIC, string postalCode, string city, string cityCode, string gLCode, string gLDescription, string shortageGLCode, string wHTaxGLCode, string wHTaxGLDescription, string shortageGLDescription, string fax, string email, string telePhone, string nationalTaxNumber, string salesTaxNumber, string definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var nICParameter = nIC != null ?
                new ObjectParameter("NIC", nIC) :
                new ObjectParameter("NIC", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var cityCodeParameter = cityCode != null ?
                new ObjectParameter("CityCode", cityCode) :
                new ObjectParameter("CityCode", typeof(string));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            var gLDescriptionParameter = gLDescription != null ?
                new ObjectParameter("GLDescription", gLDescription) :
                new ObjectParameter("GLDescription", typeof(string));
    
            var shortageGLCodeParameter = shortageGLCode != null ?
                new ObjectParameter("ShortageGLCode", shortageGLCode) :
                new ObjectParameter("ShortageGLCode", typeof(string));
    
            var wHTaxGLCodeParameter = wHTaxGLCode != null ?
                new ObjectParameter("WHTaxGLCode", wHTaxGLCode) :
                new ObjectParameter("WHTaxGLCode", typeof(string));
    
            var wHTaxGLDescriptionParameter = wHTaxGLDescription != null ?
                new ObjectParameter("WHTaxGLDescription", wHTaxGLDescription) :
                new ObjectParameter("WHTaxGLDescription", typeof(string));
    
            var shortageGLDescriptionParameter = shortageGLDescription != null ?
                new ObjectParameter("ShortageGLDescription", shortageGLDescription) :
                new ObjectParameter("ShortageGLDescription", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telePhoneParameter = telePhone != null ?
                new ObjectParameter("TelePhone", telePhone) :
                new ObjectParameter("TelePhone", typeof(string));
    
            var nationalTaxNumberParameter = nationalTaxNumber != null ?
                new ObjectParameter("NationalTaxNumber", nationalTaxNumber) :
                new ObjectParameter("NationalTaxNumber", typeof(string));
    
            var salesTaxNumberParameter = salesTaxNumber != null ?
                new ObjectParameter("SalesTaxNumber", salesTaxNumber) :
                new ObjectParameter("SalesTaxNumber", typeof(string));
    
            var definitionDateParameter = definitionDate != null ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(string));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomers", customerCodeParameter, customerNameParameter, urduTitleParameter, addressParameter, nICParameter, postalCodeParameter, cityParameter, cityCodeParameter, gLCodeParameter, gLDescriptionParameter, shortageGLCodeParameter, wHTaxGLCodeParameter, wHTaxGLDescriptionParameter, shortageGLDescriptionParameter, faxParameter, emailParameter, telePhoneParameter, nationalTaxNumberParameter, salesTaxNumberParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateDestinationPoints(string destinationPointCode, string destinationPointName, string urduTitle, Nullable<System.DateTime> definitionDate, Nullable<decimal> pointNo, Nullable<long> newRecord)
        {
            var destinationPointCodeParameter = destinationPointCode != null ?
                new ObjectParameter("DestinationPointCode", destinationPointCode) :
                new ObjectParameter("DestinationPointCode", typeof(string));
    
            var destinationPointNameParameter = destinationPointName != null ?
                new ObjectParameter("DestinationPointName", destinationPointName) :
                new ObjectParameter("DestinationPointName", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var pointNoParameter = pointNo.HasValue ?
                new ObjectParameter("PointNo", pointNo) :
                new ObjectParameter("PointNo", typeof(decimal));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDestinationPoints", destinationPointCodeParameter, destinationPointNameParameter, urduTitleParameter, definitionDateParameter, pointNoParameter, newRecordParameter);
        }
    
        public virtual int UpdateDetailHistoryTransactionAudit(string userID, string computerID, Nullable<System.DateTime> processDateTime, string error, Nullable<System.DateTime> transactionDate, Nullable<long> stationCode, string transactionNature, string transactionNo, Nullable<long> partyCode, string pONature, string pONumber, Nullable<long> itemCode, Nullable<decimal> quantity, Nullable<decimal> availableQuantity, Nullable<decimal> balanceQuantity, Nullable<decimal> pOAvailableQuantity, Nullable<decimal> pOBalanceQuantity, Nullable<long> gUID, Nullable<bool> newRecord)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var computerIDParameter = computerID != null ?
                new ObjectParameter("ComputerID", computerID) :
                new ObjectParameter("ComputerID", typeof(string));
    
            var processDateTimeParameter = processDateTime.HasValue ?
                new ObjectParameter("ProcessDateTime", processDateTime) :
                new ObjectParameter("ProcessDateTime", typeof(System.DateTime));
    
            var errorParameter = error != null ?
                new ObjectParameter("Error", error) :
                new ObjectParameter("Error", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var stationCodeParameter = stationCode.HasValue ?
                new ObjectParameter("StationCode", stationCode) :
                new ObjectParameter("StationCode", typeof(long));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var partyCodeParameter = partyCode.HasValue ?
                new ObjectParameter("PartyCode", partyCode) :
                new ObjectParameter("PartyCode", typeof(long));
    
            var pONatureParameter = pONature != null ?
                new ObjectParameter("PONature", pONature) :
                new ObjectParameter("PONature", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var availableQuantityParameter = availableQuantity.HasValue ?
                new ObjectParameter("AvailableQuantity", availableQuantity) :
                new ObjectParameter("AvailableQuantity", typeof(decimal));
    
            var balanceQuantityParameter = balanceQuantity.HasValue ?
                new ObjectParameter("BalanceQuantity", balanceQuantity) :
                new ObjectParameter("BalanceQuantity", typeof(decimal));
    
            var pOAvailableQuantityParameter = pOAvailableQuantity.HasValue ?
                new ObjectParameter("POAvailableQuantity", pOAvailableQuantity) :
                new ObjectParameter("POAvailableQuantity", typeof(decimal));
    
            var pOBalanceQuantityParameter = pOBalanceQuantity.HasValue ?
                new ObjectParameter("POBalanceQuantity", pOBalanceQuantity) :
                new ObjectParameter("POBalanceQuantity", typeof(decimal));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDetailHistoryTransactionAudit", userIDParameter, computerIDParameter, processDateTimeParameter, errorParameter, transactionDateParameter, stationCodeParameter, transactionNatureParameter, transactionNoParameter, partyCodeParameter, pONatureParameter, pONumberParameter, itemCodeParameter, quantityParameter, availableQuantityParameter, balanceQuantityParameter, pOAvailableQuantityParameter, pOBalanceQuantityParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateDivisions(string divisionCode, string division, Nullable<System.DateTime> definitionDate, Nullable<long> newRecord)
        {
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDivisions", divisionCodeParameter, divisionParameter, definitionDateParameter, newRecordParameter);
        }
    
        public virtual int UpdateFSFControls(string controlCode, string controlDescription, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFSFControls", controlCodeParameter, controlDescriptionParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateFSFGenerals(string controlCode, string controlDescription, string generalCode, string generalDescription, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var generalDescriptionParameter = generalDescription != null ?
                new ObjectParameter("GeneralDescription", generalDescription) :
                new ObjectParameter("GeneralDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFSFGenerals", controlCodeParameter, controlDescriptionParameter, generalCodeParameter, generalDescriptionParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateFSFSubsidiaries(string controlCode, string generalCode, string generalDescription, string subsidiaryCode, string controlDescription, string subsidiaryDescription, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var generalDescriptionParameter = generalDescription != null ?
                new ObjectParameter("GeneralDescription", generalDescription) :
                new ObjectParameter("GeneralDescription", typeof(string));
    
            var subsidiaryCodeParameter = subsidiaryCode != null ?
                new ObjectParameter("SubsidiaryCode", subsidiaryCode) :
                new ObjectParameter("SubsidiaryCode", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var subsidiaryDescriptionParameter = subsidiaryDescription != null ?
                new ObjectParameter("SubsidiaryDescription", subsidiaryDescription) :
                new ObjectParameter("SubsidiaryDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFSFSubsidiaries", controlCodeParameter, generalCodeParameter, generalDescriptionParameter, subsidiaryCodeParameter, controlDescriptionParameter, subsidiaryDescriptionParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateFSFSubSubsidiaries(string controlCode, string generalCode, string subsidiaryCode1, string controlDescription, string generalDescription, string subsidiaryDescription, string subSubsidiaryCode, string subSubsidiaryDescription, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var controlCodeParameter = controlCode != null ?
                new ObjectParameter("ControlCode", controlCode) :
                new ObjectParameter("ControlCode", typeof(string));
    
            var generalCodeParameter = generalCode != null ?
                new ObjectParameter("GeneralCode", generalCode) :
                new ObjectParameter("GeneralCode", typeof(string));
    
            var subsidiaryCode1Parameter = subsidiaryCode1 != null ?
                new ObjectParameter("SubsidiaryCode1", subsidiaryCode1) :
                new ObjectParameter("SubsidiaryCode1", typeof(string));
    
            var controlDescriptionParameter = controlDescription != null ?
                new ObjectParameter("ControlDescription", controlDescription) :
                new ObjectParameter("ControlDescription", typeof(string));
    
            var generalDescriptionParameter = generalDescription != null ?
                new ObjectParameter("GeneralDescription", generalDescription) :
                new ObjectParameter("GeneralDescription", typeof(string));
    
            var subsidiaryDescriptionParameter = subsidiaryDescription != null ?
                new ObjectParameter("SubsidiaryDescription", subsidiaryDescription) :
                new ObjectParameter("SubsidiaryDescription", typeof(string));
    
            var subSubsidiaryCodeParameter = subSubsidiaryCode != null ?
                new ObjectParameter("SubSubsidiaryCode", subSubsidiaryCode) :
                new ObjectParameter("SubSubsidiaryCode", typeof(string));
    
            var subSubsidiaryDescriptionParameter = subSubsidiaryDescription != null ?
                new ObjectParameter("SubSubsidiaryDescription", subSubsidiaryDescription) :
                new ObjectParameter("SubSubsidiaryDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFSFSubSubsidiaries", controlCodeParameter, generalCodeParameter, subsidiaryCode1Parameter, controlDescriptionParameter, generalDescriptionParameter, subsidiaryDescriptionParameter, subSubsidiaryCodeParameter, subSubsidiaryDescriptionParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateGeneratedReferences(string genFrom, string formName, string transactionNature, string transactionNo, string branchCode, string documentNature, string documentNo)
        {
            var genFromParameter = genFrom != null ?
                new ObjectParameter("GenFrom", genFrom) :
                new ObjectParameter("GenFrom", typeof(string));
    
            var formNameParameter = formName != null ?
                new ObjectParameter("FormName", formName) :
                new ObjectParameter("FormName", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var documentNatureParameter = documentNature != null ?
                new ObjectParameter("DocumentNature", documentNature) :
                new ObjectParameter("DocumentNature", typeof(string));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGeneratedReferences", genFromParameter, formNameParameter, transactionNatureParameter, transactionNoParameter, branchCodeParameter, documentNatureParameter, documentNoParameter);
        }
    
        public virtual ObjectResult<string> UpdateInvoices(string transactionNo, string branchCode, string branchName, string customerCode, string customerName, string customerReference, string vehicleCode, string vehicleDescription, string stationPointCode, string stationPointName, string destinationPointCode, string destinationPointName, string productCode, string productName, Nullable<System.DateTime> transactionDate, string supplierCode, string supplierName, string description, Nullable<decimal> rate, string tripAdvanceReference, Nullable<decimal> tripAdvance, Nullable<decimal> quantity, Nullable<decimal> amount, Nullable<decimal> commission, Nullable<decimal> commissionRate, Nullable<decimal> shortageQuantity, Nullable<decimal> quantityValue, Nullable<decimal> shortage, Nullable<long> recordNo, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerReferenceParameter = customerReference != null ?
                new ObjectParameter("CustomerReference", customerReference) :
                new ObjectParameter("CustomerReference", typeof(string));
    
            var vehicleCodeParameter = vehicleCode != null ?
                new ObjectParameter("VehicleCode", vehicleCode) :
                new ObjectParameter("VehicleCode", typeof(string));
    
            var vehicleDescriptionParameter = vehicleDescription != null ?
                new ObjectParameter("VehicleDescription", vehicleDescription) :
                new ObjectParameter("VehicleDescription", typeof(string));
    
            var stationPointCodeParameter = stationPointCode != null ?
                new ObjectParameter("StationPointCode", stationPointCode) :
                new ObjectParameter("StationPointCode", typeof(string));
    
            var stationPointNameParameter = stationPointName != null ?
                new ObjectParameter("StationPointName", stationPointName) :
                new ObjectParameter("StationPointName", typeof(string));
    
            var destinationPointCodeParameter = destinationPointCode != null ?
                new ObjectParameter("DestinationPointCode", destinationPointCode) :
                new ObjectParameter("DestinationPointCode", typeof(string));
    
            var destinationPointNameParameter = destinationPointName != null ?
                new ObjectParameter("DestinationPointName", destinationPointName) :
                new ObjectParameter("DestinationPointName", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var tripAdvanceReferenceParameter = tripAdvanceReference != null ?
                new ObjectParameter("TripAdvanceReference", tripAdvanceReference) :
                new ObjectParameter("TripAdvanceReference", typeof(string));
    
            var tripAdvanceParameter = tripAdvance.HasValue ?
                new ObjectParameter("TripAdvance", tripAdvance) :
                new ObjectParameter("TripAdvance", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var commissionParameter = commission.HasValue ?
                new ObjectParameter("Commission", commission) :
                new ObjectParameter("Commission", typeof(decimal));
    
            var commissionRateParameter = commissionRate.HasValue ?
                new ObjectParameter("CommissionRate", commissionRate) :
                new ObjectParameter("CommissionRate", typeof(decimal));
    
            var shortageQuantityParameter = shortageQuantity.HasValue ?
                new ObjectParameter("ShortageQuantity", shortageQuantity) :
                new ObjectParameter("ShortageQuantity", typeof(decimal));
    
            var quantityValueParameter = quantityValue.HasValue ?
                new ObjectParameter("QuantityValue", quantityValue) :
                new ObjectParameter("QuantityValue", typeof(decimal));
    
            var shortageParameter = shortage.HasValue ?
                new ObjectParameter("Shortage", shortage) :
                new ObjectParameter("Shortage", typeof(decimal));
    
            var recordNoParameter = recordNo.HasValue ?
                new ObjectParameter("RecordNo", recordNo) :
                new ObjectParameter("RecordNo", typeof(long));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateInvoices", transactionNoParameter, branchCodeParameter, branchNameParameter, customerCodeParameter, customerNameParameter, customerReferenceParameter, vehicleCodeParameter, vehicleDescriptionParameter, stationPointCodeParameter, stationPointNameParameter, destinationPointCodeParameter, destinationPointNameParameter, productCodeParameter, productNameParameter, transactionDateParameter, supplierCodeParameter, supplierNameParameter, descriptionParameter, rateParameter, tripAdvanceReferenceParameter, tripAdvanceParameter, quantityParameter, amountParameter, commissionParameter, commissionRateParameter, shortageQuantityParameter, quantityValueParameter, shortageParameter, recordNoParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateOrdersDetails(string orderNature, string orderNumber, string itemCode, string item, Nullable<decimal> quantity, Nullable<decimal> price, string amount, Nullable<long> newRecord)
        {
            var orderNatureParameter = orderNature != null ?
                new ObjectParameter("OrderNature", orderNature) :
                new ObjectParameter("OrderNature", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrdersDetails", orderNatureParameter, orderNumberParameter, itemCodeParameter, itemParameter, quantityParameter, priceParameter, amountParameter, newRecordParameter);
        }
    
        public virtual int UpdatePacking(string packingCode, string packing, string reportTitle, Nullable<System.DateTime> definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var packingCodeParameter = packingCode != null ?
                new ObjectParameter("PackingCode", packingCode) :
                new ObjectParameter("PackingCode", typeof(string));
    
            var packingParameter = packing != null ?
                new ObjectParameter("Packing", packing) :
                new ObjectParameter("Packing", typeof(string));
    
            var reportTitleParameter = reportTitle != null ?
                new ObjectParameter("ReportTitle", reportTitle) :
                new ObjectParameter("ReportTitle", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePacking", packingCodeParameter, packingParameter, reportTitleParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdatePosting(string branchCode, string divisionCode, string voucherNature, string voucherNo, Nullable<System.DateTime> voucherDate, Nullable<long> gLCode, string billNo, string refVoucherNature, string refVoucherNo, Nullable<System.DateTime> refVoucherDate, string refBillNo, Nullable<decimal> amountUsed, Nullable<decimal> debitBalance, Nullable<decimal> creditBalance, Nullable<int> nType, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> toDate, string fromDocNo, string toDocNo, string transactionType, Nullable<long> gUID)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var voucherNatureParameter = voucherNature != null ?
                new ObjectParameter("VoucherNature", voucherNature) :
                new ObjectParameter("VoucherNature", typeof(string));
    
            var voucherNoParameter = voucherNo != null ?
                new ObjectParameter("VoucherNo", voucherNo) :
                new ObjectParameter("VoucherNo", typeof(string));
    
            var voucherDateParameter = voucherDate.HasValue ?
                new ObjectParameter("VoucherDate", voucherDate) :
                new ObjectParameter("VoucherDate", typeof(System.DateTime));
    
            var gLCodeParameter = gLCode.HasValue ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(long));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var refVoucherNatureParameter = refVoucherNature != null ?
                new ObjectParameter("RefVoucherNature", refVoucherNature) :
                new ObjectParameter("RefVoucherNature", typeof(string));
    
            var refVoucherNoParameter = refVoucherNo != null ?
                new ObjectParameter("RefVoucherNo", refVoucherNo) :
                new ObjectParameter("RefVoucherNo", typeof(string));
    
            var refVoucherDateParameter = refVoucherDate.HasValue ?
                new ObjectParameter("RefVoucherDate", refVoucherDate) :
                new ObjectParameter("RefVoucherDate", typeof(System.DateTime));
    
            var refBillNoParameter = refBillNo != null ?
                new ObjectParameter("RefBillNo", refBillNo) :
                new ObjectParameter("RefBillNo", typeof(string));
    
            var amountUsedParameter = amountUsed.HasValue ?
                new ObjectParameter("AmountUsed", amountUsed) :
                new ObjectParameter("AmountUsed", typeof(decimal));
    
            var debitBalanceParameter = debitBalance.HasValue ?
                new ObjectParameter("DebitBalance", debitBalance) :
                new ObjectParameter("DebitBalance", typeof(decimal));
    
            var creditBalanceParameter = creditBalance.HasValue ?
                new ObjectParameter("CreditBalance", creditBalance) :
                new ObjectParameter("CreditBalance", typeof(decimal));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(int));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var fromDocNoParameter = fromDocNo != null ?
                new ObjectParameter("FromDocNo", fromDocNo) :
                new ObjectParameter("FromDocNo", typeof(string));
    
            var toDocNoParameter = toDocNo != null ?
                new ObjectParameter("ToDocNo", toDocNo) :
                new ObjectParameter("ToDocNo", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePosting", branchCodeParameter, divisionCodeParameter, voucherNatureParameter, voucherNoParameter, voucherDateParameter, gLCodeParameter, billNoParameter, refVoucherNatureParameter, refVoucherNoParameter, refVoucherDateParameter, refBillNoParameter, amountUsedParameter, debitBalanceParameter, creditBalanceParameter, nTypeParameter, postingDateParameter, toDateParameter, fromDocNoParameter, toDocNoParameter, transactionTypeParameter, gUIDParameter);
        }
    
        public virtual int UpdateProductRates(string productCode, string productName, string stationPointCode, string stationPointDescription, string destinationPointDescription, string destinationPointCode, Nullable<System.DateTime> effectiveDate, Nullable<decimal> rate, Nullable<decimal> tripAdvanceAmount, Nullable<long> newRecord)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var stationPointCodeParameter = stationPointCode != null ?
                new ObjectParameter("StationPointCode", stationPointCode) :
                new ObjectParameter("StationPointCode", typeof(string));
    
            var stationPointDescriptionParameter = stationPointDescription != null ?
                new ObjectParameter("StationPointDescription", stationPointDescription) :
                new ObjectParameter("StationPointDescription", typeof(string));
    
            var destinationPointDescriptionParameter = destinationPointDescription != null ?
                new ObjectParameter("DestinationPointDescription", destinationPointDescription) :
                new ObjectParameter("DestinationPointDescription", typeof(string));
    
            var destinationPointCodeParameter = destinationPointCode != null ?
                new ObjectParameter("DestinationPointCode", destinationPointCode) :
                new ObjectParameter("DestinationPointCode", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var tripAdvanceAmountParameter = tripAdvanceAmount.HasValue ?
                new ObjectParameter("TripAdvanceAmount", tripAdvanceAmount) :
                new ObjectParameter("TripAdvanceAmount", typeof(decimal));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductRates", productCodeParameter, productNameParameter, stationPointCodeParameter, stationPointDescriptionParameter, destinationPointDescriptionParameter, destinationPointCodeParameter, effectiveDateParameter, rateParameter, tripAdvanceAmountParameter, newRecordParameter);
        }
    
        public virtual int UpdateProducts(string productCode, string productName, string urduTitle, Nullable<System.DateTime> definitionDate, Nullable<long> newRecord)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProducts", productCodeParameter, productNameParameter, urduTitleParameter, definitionDateParameter, newRecordParameter);
        }
    
        public virtual int UpdateProductValues(string productCode, string productName, Nullable<System.DateTime> effectiveDate, Nullable<decimal> quantityValue, Nullable<long> newRecord)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var quantityValueParameter = quantityValue.HasValue ?
                new ObjectParameter("QuantityValue", quantityValue) :
                new ObjectParameter("QuantityValue", typeof(decimal));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductValues", productCodeParameter, productNameParameter, effectiveDateParameter, quantityValueParameter, newRecordParameter);
        }
    
        public virtual ObjectResult<string> UpdateReceipts(string transactionNo, Nullable<System.DateTime> receiptDate, string branchCode, string branchName, string billNo, string customerCode, string customerName, string description, Nullable<decimal> taxRate, Nullable<decimal> saleTaxValue, Nullable<decimal> amountIncSaleTax, Nullable<decimal> amount, Nullable<decimal> totalAmount, Nullable<decimal> shortage, Nullable<long> recordNo, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var receiptDateParameter = receiptDate.HasValue ?
                new ObjectParameter("ReceiptDate", receiptDate) :
                new ObjectParameter("ReceiptDate", typeof(System.DateTime));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var taxRateParameter = taxRate.HasValue ?
                new ObjectParameter("TaxRate", taxRate) :
                new ObjectParameter("TaxRate", typeof(decimal));
    
            var saleTaxValueParameter = saleTaxValue.HasValue ?
                new ObjectParameter("SaleTaxValue", saleTaxValue) :
                new ObjectParameter("SaleTaxValue", typeof(decimal));
    
            var amountIncSaleTaxParameter = amountIncSaleTax.HasValue ?
                new ObjectParameter("AmountIncSaleTax", amountIncSaleTax) :
                new ObjectParameter("AmountIncSaleTax", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var shortageParameter = shortage.HasValue ?
                new ObjectParameter("Shortage", shortage) :
                new ObjectParameter("Shortage", typeof(decimal));
    
            var recordNoParameter = recordNo.HasValue ?
                new ObjectParameter("RecordNo", recordNo) :
                new ObjectParameter("RecordNo", typeof(long));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateReceipts", transactionNoParameter, receiptDateParameter, branchCodeParameter, branchNameParameter, billNoParameter, customerCodeParameter, customerNameParameter, descriptionParameter, taxRateParameter, saleTaxValueParameter, amountIncSaleTaxParameter, amountParameter, totalAmountParameter, shortageParameter, recordNoParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateRegions(string regionCode, string regionName, string urduTitle, Nullable<System.DateTime> definitionDate, Nullable<long> newRecord)
        {
            var regionCodeParameter = regionCode != null ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(string));
    
            var regionNameParameter = regionName != null ?
                new ObjectParameter("RegionName", regionName) :
                new ObjectParameter("RegionName", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRegions", regionCodeParameter, regionNameParameter, urduTitleParameter, definitionDateParameter, newRecordParameter);
        }
    
        public virtual int UpdateStationPoints(string stationPointCode, string stationPointName, string urduTitle, Nullable<System.DateTime> definitionDate, Nullable<decimal> pointNo, Nullable<long> newRecord)
        {
            var stationPointCodeParameter = stationPointCode != null ?
                new ObjectParameter("StationPointCode", stationPointCode) :
                new ObjectParameter("StationPointCode", typeof(string));
    
            var stationPointNameParameter = stationPointName != null ?
                new ObjectParameter("StationPointName", stationPointName) :
                new ObjectParameter("StationPointName", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var pointNoParameter = pointNo.HasValue ?
                new ObjectParameter("PointNo", pointNo) :
                new ObjectParameter("PointNo", typeof(decimal));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStationPoints", stationPointCodeParameter, stationPointNameParameter, urduTitleParameter, definitionDateParameter, pointNoParameter, newRecordParameter);
        }
    
        public virtual int UpdateSuppliers(string supplierCode, string supplierName, string urduTitle, string address, string nIC, string postalCode, string city, string cityCode, string fax, string email, string telePhone, string nationalTaxNumber, string salesTaxNumber, string definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var nICParameter = nIC != null ?
                new ObjectParameter("NIC", nIC) :
                new ObjectParameter("NIC", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var cityCodeParameter = cityCode != null ?
                new ObjectParameter("CityCode", cityCode) :
                new ObjectParameter("CityCode", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telePhoneParameter = telePhone != null ?
                new ObjectParameter("TelePhone", telePhone) :
                new ObjectParameter("TelePhone", typeof(string));
    
            var nationalTaxNumberParameter = nationalTaxNumber != null ?
                new ObjectParameter("NationalTaxNumber", nationalTaxNumber) :
                new ObjectParameter("NationalTaxNumber", typeof(string));
    
            var salesTaxNumberParameter = salesTaxNumber != null ?
                new ObjectParameter("SalesTaxNumber", salesTaxNumber) :
                new ObjectParameter("SalesTaxNumber", typeof(string));
    
            var definitionDateParameter = definitionDate != null ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(string));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSuppliers", supplierCodeParameter, supplierNameParameter, urduTitleParameter, addressParameter, nICParameter, postalCodeParameter, cityParameter, cityCodeParameter, faxParameter, emailParameter, telePhoneParameter, nationalTaxNumberParameter, salesTaxNumberParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateTransactionsDetails(string branchCode, string transactionNature, string transactionNo, string gLCode, string gLDescription, string divisionCode, string division, Nullable<decimal> quantity, Nullable<decimal> rate, Nullable<decimal> amount, Nullable<long> newRecord)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            var gLDescriptionParameter = gLDescription != null ?
                new ObjectParameter("GLDescription", gLDescription) :
                new ObjectParameter("GLDescription", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionsDetails", branchCodeParameter, transactionNatureParameter, transactionNoParameter, gLCodeParameter, gLDescriptionParameter, divisionCodeParameter, divisionParameter, quantityParameter, rateParameter, amountParameter, newRecordParameter);
        }
    
        public virtual int UpdateTransactionTypes(string transactionTypeCode, string transactionType, string natureCode, string nature, string urduTitle, Nullable<System.DateTime> definitionDate, Nullable<long> newRecord)
        {
            var transactionTypeCodeParameter = transactionTypeCode != null ?
                new ObjectParameter("TransactionTypeCode", transactionTypeCode) :
                new ObjectParameter("TransactionTypeCode", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var natureCodeParameter = natureCode != null ?
                new ObjectParameter("NatureCode", natureCode) :
                new ObjectParameter("NatureCode", typeof(string));
    
            var natureParameter = nature != null ?
                new ObjectParameter("Nature", nature) :
                new ObjectParameter("Nature", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionTypes", transactionTypeCodeParameter, transactionTypeParameter, natureCodeParameter, natureParameter, urduTitleParameter, definitionDateParameter, newRecordParameter);
        }
    
        public virtual int UpdateUserSecurities(string userID, string userName, string password, Nullable<bool> isAdministrator, Nullable<bool> isActive, Nullable<long> newRecord)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isAdministratorParameter = isAdministrator.HasValue ?
                new ObjectParameter("IsAdministrator", isAdministrator) :
                new ObjectParameter("IsAdministrator", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserSecurities", userIDParameter, userNameParameter, passwordParameter, isAdministratorParameter, isActiveParameter, newRecordParameter);
        }
    
        public virtual ObjectResult<string> UpdateVehicleAdjustments(string branchCode, string transactionNature, string branchName, string transactionNo, string vehicleCode, string mode, string vehicleDescription, string chequeNo, string urduTitle, Nullable<System.DateTime> transactionDate, string description, Nullable<byte> locked, Nullable<byte> posted, Nullable<int> gUID, Nullable<long> newRecord)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var vehicleCodeParameter = vehicleCode != null ?
                new ObjectParameter("VehicleCode", vehicleCode) :
                new ObjectParameter("VehicleCode", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(string));
    
            var vehicleDescriptionParameter = vehicleDescription != null ?
                new ObjectParameter("VehicleDescription", vehicleDescription) :
                new ObjectParameter("VehicleDescription", typeof(string));
    
            var chequeNoParameter = chequeNo != null ?
                new ObjectParameter("ChequeNo", chequeNo) :
                new ObjectParameter("ChequeNo", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var lockedParameter = locked.HasValue ?
                new ObjectParameter("Locked", locked) :
                new ObjectParameter("Locked", typeof(byte));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(byte));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(int));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateVehicleAdjustments", branchCodeParameter, transactionNatureParameter, branchNameParameter, transactionNoParameter, vehicleCodeParameter, modeParameter, vehicleDescriptionParameter, chequeNoParameter, urduTitleParameter, transactionDateParameter, descriptionParameter, lockedParameter, postedParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateVehicleAdjustmentsDetails(string transactionNature, string branchCode, string transactionNo, string gLCode, string gLDescription, Nullable<decimal> amount, string typeCode, string type, string divisionCode, string division, string mode, string urduDescription, Nullable<long> newRecord)
        {
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            var gLDescriptionParameter = gLDescription != null ?
                new ObjectParameter("GLDescription", gLDescription) :
                new ObjectParameter("GLDescription", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(string));
    
            var urduDescriptionParameter = urduDescription != null ?
                new ObjectParameter("UrduDescription", urduDescription) :
                new ObjectParameter("UrduDescription", typeof(string));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVehicleAdjustmentsDetails", transactionNatureParameter, branchCodeParameter, transactionNoParameter, gLCodeParameter, gLDescriptionParameter, amountParameter, typeCodeParameter, typeParameter, divisionCodeParameter, divisionParameter, modeParameter, urduDescriptionParameter, newRecordParameter);
        }
    
        public virtual int UpdateVehicleOwners(string ownerCode, string ownerName, string urduTitle, string address, string nIC, string postalCode, string city, string cityCode, string email, string telePhone, string definitionDate, Nullable<long> gUID, Nullable<long> newRecord)
        {
            var ownerCodeParameter = ownerCode != null ?
                new ObjectParameter("OwnerCode", ownerCode) :
                new ObjectParameter("OwnerCode", typeof(string));
    
            var ownerNameParameter = ownerName != null ?
                new ObjectParameter("OwnerName", ownerName) :
                new ObjectParameter("OwnerName", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var nICParameter = nIC != null ?
                new ObjectParameter("NIC", nIC) :
                new ObjectParameter("NIC", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var cityCodeParameter = cityCode != null ?
                new ObjectParameter("CityCode", cityCode) :
                new ObjectParameter("CityCode", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telePhoneParameter = telePhone != null ?
                new ObjectParameter("TelePhone", telePhone) :
                new ObjectParameter("TelePhone", typeof(string));
    
            var definitionDateParameter = definitionDate != null ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(string));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(long));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVehicleOwners", ownerCodeParameter, ownerNameParameter, urduTitleParameter, addressParameter, nICParameter, postalCodeParameter, cityParameter, cityCodeParameter, emailParameter, telePhoneParameter, definitionDateParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateVehicles(string vehicleCode, string vehicleDescription, string ownerCode, string ownerName, string capacity, string installmentGLCode, string installmentGLDescription, string freightGLCode, string freightGLDescription, string loanGLCode, string customerCode, string customer, string loanGLDescription, string commissionGLCode, string commissionGLDescription, Nullable<System.DateTime> definitionDate, Nullable<long> newRecord)
        {
            var vehicleCodeParameter = vehicleCode != null ?
                new ObjectParameter("VehicleCode", vehicleCode) :
                new ObjectParameter("VehicleCode", typeof(string));
    
            var vehicleDescriptionParameter = vehicleDescription != null ?
                new ObjectParameter("VehicleDescription", vehicleDescription) :
                new ObjectParameter("VehicleDescription", typeof(string));
    
            var ownerCodeParameter = ownerCode != null ?
                new ObjectParameter("OwnerCode", ownerCode) :
                new ObjectParameter("OwnerCode", typeof(string));
    
            var ownerNameParameter = ownerName != null ?
                new ObjectParameter("OwnerName", ownerName) :
                new ObjectParameter("OwnerName", typeof(string));
    
            var capacityParameter = capacity != null ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(string));
    
            var installmentGLCodeParameter = installmentGLCode != null ?
                new ObjectParameter("InstallmentGLCode", installmentGLCode) :
                new ObjectParameter("InstallmentGLCode", typeof(string));
    
            var installmentGLDescriptionParameter = installmentGLDescription != null ?
                new ObjectParameter("InstallmentGLDescription", installmentGLDescription) :
                new ObjectParameter("InstallmentGLDescription", typeof(string));
    
            var freightGLCodeParameter = freightGLCode != null ?
                new ObjectParameter("FreightGLCode", freightGLCode) :
                new ObjectParameter("FreightGLCode", typeof(string));
    
            var freightGLDescriptionParameter = freightGLDescription != null ?
                new ObjectParameter("FreightGLDescription", freightGLDescription) :
                new ObjectParameter("FreightGLDescription", typeof(string));
    
            var loanGLCodeParameter = loanGLCode != null ?
                new ObjectParameter("LoanGLCode", loanGLCode) :
                new ObjectParameter("LoanGLCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            var loanGLDescriptionParameter = loanGLDescription != null ?
                new ObjectParameter("LoanGLDescription", loanGLDescription) :
                new ObjectParameter("LoanGLDescription", typeof(string));
    
            var commissionGLCodeParameter = commissionGLCode != null ?
                new ObjectParameter("CommissionGLCode", commissionGLCode) :
                new ObjectParameter("CommissionGLCode", typeof(string));
    
            var commissionGLDescriptionParameter = commissionGLDescription != null ?
                new ObjectParameter("CommissionGLDescription", commissionGLDescription) :
                new ObjectParameter("CommissionGLDescription", typeof(string));
    
            var definitionDateParameter = definitionDate.HasValue ?
                new ObjectParameter("DefinitionDate", definitionDate) :
                new ObjectParameter("DefinitionDate", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVehicles", vehicleCodeParameter, vehicleDescriptionParameter, ownerCodeParameter, ownerNameParameter, capacityParameter, installmentGLCodeParameter, installmentGLDescriptionParameter, freightGLCodeParameter, freightGLDescriptionParameter, loanGLCodeParameter, customerCodeParameter, customerParameter, loanGLDescriptionParameter, commissionGLCodeParameter, commissionGLDescriptionParameter, definitionDateParameter, newRecordParameter);
        }
    
        public virtual ObjectResult<string> UpdateVouchers(string branchCode, string transactionNature, string branchName, string transactionNo, string urduTitle, Nullable<System.DateTime> transactionDate, string description, Nullable<byte> locked, Nullable<byte> isAutoGenerated, Nullable<byte> posted, Nullable<int> gUID, Nullable<long> newRecord)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var urduTitleParameter = urduTitle != null ?
                new ObjectParameter("UrduTitle", urduTitle) :
                new ObjectParameter("UrduTitle", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var lockedParameter = locked.HasValue ?
                new ObjectParameter("Locked", locked) :
                new ObjectParameter("Locked", typeof(byte));
    
            var isAutoGeneratedParameter = isAutoGenerated.HasValue ?
                new ObjectParameter("IsAutoGenerated", isAutoGenerated) :
                new ObjectParameter("IsAutoGenerated", typeof(byte));
    
            var postedParameter = posted.HasValue ?
                new ObjectParameter("Posted", posted) :
                new ObjectParameter("Posted", typeof(byte));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(int));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateVouchers", branchCodeParameter, transactionNatureParameter, branchNameParameter, transactionNoParameter, urduTitleParameter, transactionDateParameter, descriptionParameter, lockedParameter, isAutoGeneratedParameter, postedParameter, gUIDParameter, newRecordParameter);
        }
    
        public virtual int UpdateVouchersDetails(string transactionNature, string branchCode, string transactionNo, string gLCode, string gLDescription, Nullable<decimal> debit, Nullable<decimal> credit, string divisionCode, string division, string narration, string reference, Nullable<long> newRecord)
        {
            var transactionNatureParameter = transactionNature != null ?
                new ObjectParameter("TransactionNature", transactionNature) :
                new ObjectParameter("TransactionNature", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var gLCodeParameter = gLCode != null ?
                new ObjectParameter("GLCode", gLCode) :
                new ObjectParameter("GLCode", typeof(string));
    
            var gLDescriptionParameter = gLDescription != null ?
                new ObjectParameter("GLDescription", gLDescription) :
                new ObjectParameter("GLDescription", typeof(string));
    
            var debitParameter = debit.HasValue ?
                new ObjectParameter("Debit", debit) :
                new ObjectParameter("Debit", typeof(decimal));
    
            var creditParameter = credit.HasValue ?
                new ObjectParameter("Credit", credit) :
                new ObjectParameter("Credit", typeof(decimal));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var narrationParameter = narration != null ?
                new ObjectParameter("Narration", narration) :
                new ObjectParameter("Narration", typeof(string));
    
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVouchersDetails", transactionNatureParameter, branchCodeParameter, transactionNoParameter, gLCodeParameter, gLDescriptionParameter, debitParameter, creditParameter, divisionCodeParameter, divisionParameter, narrationParameter, referenceParameter, newRecordParameter);
        }
    }
}
